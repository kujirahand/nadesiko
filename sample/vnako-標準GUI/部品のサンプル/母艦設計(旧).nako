#-----------------------------------------------------------------------
# 母艦設計のテスト
#-----------------------------------------------------------------------
/***解説

■母艦設計について

母艦設計イベントは母艦を表示する以前に実行される関数です。
母艦の表示前にボタンやエディタなどの部品を作成することができます。
それにより画面表示時のちらつきなどを抑えることができます。

●困った問題

ここで問題となるのが、関数内で宣言した変数はローカル変数であるという
ことです。そのため、関数内で『●●とはｘｘｘ』という従来の方法で
部品を作成すると関数を抜けるときに変数が削除されてしまい、それ以降の
プログラムで部品を操作することができなくなってしまいます。

●部品の動的作成

そこで、『作成』命令使って、動的に部品をグローバル変数として登録します。
動的に作成した部品は、従来どおりの『部品名のメンバ名』という形では
利用できません。（※補足１）

『部品名→メンバ名』または『部品名＠「メンバ名」』という形で利用します。

（※補足１）
『AのB』という形は、Aがグループであるという前提があって初めて
BがAのグループに属しているということが分かります。
そのため、変数を動的に作った場合は、『AのB』という形では、
BがAのグループのメンバだということが判別することができません。

***/

!魚一覧とは文字列＝「うに{~}いくら{~}たらこ{~}さけ{~}かつお{~}」

●母艦設計
　　# ボタンとテキストをたくさん作ります
    C=0
    魚一覧を反復
        YY = C * 32 + 10
        N=それ
        # ハッシュに部品を代入する方法
        ED@Nをエディタとして作成。
        ED@「{N}」→X＝10
        ED@「{N}」→Y＝YY
        ED@「{N}」→W＝200
        
        # 配列に部品を代入する方法
        BT[C]をボタンとして作成
        BT[C]→X＝220
        BT[C]→Y＝YY
        BT[C]→テキストは「言う」
        BT[C]→ポケットはN
        BT[C]→クリックした時は〜
        　　# イベントが起きるとイベントを起こしたグループが
            # 「イベント部品」に代入されます。
        　　N=イベント部品→ポケット
            S=ED@「{N}」→テキスト
            もし、Sが空ならば
            　　「『{N}』は空です。」と、言う
            違えば
            　　Sを言う
            ここまで
        C=C+1

# 母艦が表示されてから作れるボタン
確認ボタンとはボタン
確認ボタンのYは250
確認ボタンのクリックした時は〜
　　魚一覧を反復
    　　魚はそれ
        ED@「{魚}」→テキストは、「私は『｛魚｝』です。」
