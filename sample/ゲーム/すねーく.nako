#-------------------------------------------
#【ソフト名】　すねーく
#【作　　者】　canot
#【連 絡 先】　rakugaki164@msn.com
#【投 稿 日】　2005/05/21 + 2005/10/27
#【ジャンル】　ゲーム
#【なでしこバージョン】　ver.1.27
#【なでしこの実行方法】　標準GUI(vnako.exe)
#【 URL とライセンス 】	http://rakugaki.moo.jp/scr/
#【転　　載】　全て許可/教えてくれたら喜びます。
#【利用作成するファイル】　なし
#【コメント】　
#-----------------------------------------------------------------------
# すねーく ver,1.01 for Sample
#　参考：「パクパクイモムシくん」kuwaさん
#　		「なでりす」クジラ飛行机さん
#-----------------------------------------------------------------------
# お久しぶりです。なでしこプログラムの練習がてらに作ってみました。
#「なでりす」を原型に、
# ひまわりで公開されたkuwaさんの「パクパクイモムシくん」を参考にして、
# なでしこ用のスネークゲームを作ってみました。
# しかしアルゴリズムはほぼ自作なので
# 長い上に微妙に操作感が違います。
# 元のほうが気持ち良い操作感なんです。
# その代わり改造しやすくなっています。そのはずです。
# よって、改造大歓迎です。
#　1.01でのバグフィクス：母艦へ描画されていたので、OBJ「画面」への描画に修正
#-----------------------------------------------------------------------
# 変数初期化
#-----------------------------------------------------------------------
アプリタイトルは「すねーく」
ブロック数は13
CHサイズ＝16
キャンバス色[0] = 「$d6dbbf」#背景
キャンバス色[1] = 「$35362f」#描画
キャンバス色[2] = 「$c6cbaf」#無描画
制御バッファ=2

左キー = 37
上キー = 38
右キー = 39
下キー = 40
スペースキー = 32

スコア=0
ハイスコア=0
モード=1
FFスイッチ=0
EXスイッチ=0

回数=1
速さ=0.03
処理頻度=3

メッセージはアプリタイトル
プレイサイズ=CHサイズ×ブロック数

#Window-----------------------------------------------------------------------

母艦はアプリタイトル
母艦のスタイルは枠固定
母艦のクライアントＷは、プレイサイズ
母艦のクライアントＨは、プレイサイズ
母艦を中央移動。

#-----------------------------------------------------------------------
# 画面の設定
#-----------------------------------------------------------------------
画面とはイメージ
画面のXは、0
画面のYは、0
画面のWは、プレイサイズ
画面のHは、プレイサイズ
画面クリア。

#-----------------------------------------------------------------------
# Softwere"Snake"
#-----------------------------------------------------------------------
●メイン
初期化
オープニング処理
母艦は「{スコア}　-　{アプリタイトル}」
EXスイッチが、0以上の間
	(速さ)秒待つ
	キー認識
    FFスイッチが、(処理頻度)以上の間
		主演算
		配列初期化
		データ合成
		画面出力処理
		FFスイッチ=0
    ここまで
    FFスイッチ＝FFスイッチ+1
ここまで
終了


#DataSub-----------------------------------------------------------------------
●主演算
	C=スコア+2
	(スコア+2)回
		PY座標X[(C+1)]＝PY座標X[C]
        PY座標Y[(C+1)]＝PY座標Y[C]
        C=C-1
    ここまで
    PY座標X[1]＝PY座標X[1]+PY移動量X
    PY座標Y[1]＝PY座標Y[1]+PY移動量Y
    
    もし、((PY座標X[1]＜0)||(PY座標Y[1]＜0)||(PY座標X[1]＞=ブロック数)||(PY座標Y[1]＞=ブロック数))ならば、
    	ゲームオーバー
    違えば
	    もし、(内部配列[PY座標X[1],PY座標Y[1]]=1)ならば、
	    	ゲームオーバー
	    もし、(内部配列[PY座標X[1],PY座標Y[1]]=2)ならば、
			スコア=スコア+1
	        エサ配置
			母艦は「{スコア}　-　{アプリタイトル}」
	

●データ合成
	内部配列[DT座標X,DT座標Y]=2
	表示配列[DT座標X,DT座標Y]=1
	(スコア+1)回
		表示配列[PY座標X[回数],PY座標Y[回数]]=1
		内部配列[PY座標X[回数],PY座標Y[回数]]=1
    ここまで
        
●エサ配置
	DT座標X=ブロック数の乱数
	DT座標Y=ブロック数の乱数

●初期化
	スコア=0
	PY座標X[1]=5
	PY座標Y[1]=5
	PY移動量X=1
	PY移動量Y=0
	エサ配置
	配列初期化
	データ合成
    
#KeySub-----------------------------------------------------------------------
●キー認識
	もし(上キーのキー状態=オン)ならば、
    	PY移動量X=0
		PY移動量Y=-1
	もし(下キーのキー状態=オン)ならば、
    	PY移動量X=0
		PY移動量Y=1
	もし(右キーのキー状態=オン)ならば、
    	PY移動量X=1
		PY移動量Y=0
	もし(左キーのキー状態=オン)ならば、
    	PY移動量X=-1
		PY移動量Y=0

●キー待機
    (モード=1)の間
		もし(スペースキーのキー状態=オン)ならば、モード=2
		0.1秒待つ
    0秒待つ   

#DisplaySub-v101------------------------------------------------------------------
●配列初期化
	制御X=0
	制御Y=0
	(ブロック数)回
		(ブロック数)回
			表示配列[制御X,制御Y]=2
			内部配列[制御X,制御Y]=0
			制御X＝制御X+1
        ここまで
		制御X＝0
		制御Y＝制御Y+1
    ここまで

●画面出力処理
	制御X=0
	制御Y=0
	制御バッファ=2
	(ブロック数)回
		(ブロック数)回
			制御バッファ=表示配列[制御X,制御Y]
			線色はキャンバス色[制御バッファ]
			塗り色はキャンバス色[制御バッファ]
			四角(画面,制御X*CHサイズ,制御Y*CHサイズ,制御X*CHサイズ+CHサイズ-1,制御Y*CHサイズ+CHサイズ-1)//v101
			制御X＝制御X+1
		制御X＝0
		制御Y＝制御Y+1
	描画処理反映
    
●画面初期化
	線色はキャンバス色[0]
	塗り色はキャンバス色[0]
	線太さは1
	四角(画面,0,0,母艦のW,母艦のH)//v101

●画面リセット
	画面初期化
	画面出力処理

#VisualSub-----------------------------------------------------------------------
●タイトル
	基本Yは、CHサイズ*ブロック数/2-24
	画面の基本X,基本Yへ「{メッセージ}{\n}HISCORE: {ハイスコア}{\n}[SPACE] : Start」を文字表示。
	基本Y=0
	描画処理反映。
	キー待機

●ゲームオーバー
	モード=1
	メッセージ=「GameOver」
	もし、(スコア>ハイスコア)ならば、ハイスコア=スコア
	タイトル
    初期化
    画面リセット
	母艦は「{スコア}　-　{アプリタイトル}」
    
●オープニング処理
	画面リセット
	タイトル
	画面リセット
