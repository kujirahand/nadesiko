#-----------------------------------------------------------------------
# なでりす
#-----------------------------------------------------------------------
!「vkey.nako」を取り込む # バーチャルキー定義
!変数宣言が必要
#-----------------------------------------------------------------------
母艦は「なでりす」
母艦のクライアントＷは、300
母艦のクライアントＨは、400
母艦を中央移動。
#-----------------------------------------------------------------------
# 変数宣言
#-----------------------------------------------------------------------
ブロック横とは整数
ブロック縦とは整数
ブロック色とは配列
ブロックとは配列     # 画面のブロックデータ
固定ブロックとは配列 # 固定されたブロックのデータ
落ちモノとは配列
落ちモノ数とは整数
Xとは整数
Yとは整数
CHWとは整数 # キャラクタの幅
CHHとは整数 # キャラクタの高さ
BTOPとは整数  # 画面の上座標
BLEFTとは整数 # 画面の左座標
落下Xとは整数
落下Yとは整数
落下Wとは整数
落下Hとは整数
落下形状とは文字列
画面とはイメージ。
終了フラグとは整数
ダウンフラグとは整数。
キーとは整数
スコアとは整数
レベルとは整数

#-----------------------------------------------------------------------
# 画面に並ぶブロックの個数
#-----------------------------------------------------------------------
ブロック横は12
ブロック縦は18

#-----------------------------------------------------------------------
# ブロック１つのドット数
#-----------------------------------------------------------------------
ＣＨＨ＝20
ＣＨＷ＝20

#-----------------------------------------------------------------------
# 落ちてくるブロックの形状を定義
#-----------------------------------------------------------------------
落ちモノ[0] = 「3,3」  &改行&
              「3,3」
落ちモノ[1] = 「2,2,2」&改行&
　　　　　　　「2,0,0」
落ちモノ[2] = 「3,3,3」&改行&
　　　　　　　「0,0,3」
落ちモノ[3] = 「0,4,4」&改行&
　　　　　　　「4,4,0」
落ちモノ[4] = 「5,5,5,5」
落ちモノ[5] = 「6,6,6」&改行&
              「0,6,0」
落ちモノ[6] = 「3,3,0」&改行&
　　　　　　　「0,3,3」
落ちモノ[7] = 「2,2,2」&改行&
　　　　　　　「2,0,2」
落ちモノ数は8

ブロック色[1] = $993333
ブロック色[2] = $FF9933
ブロック色[3] = $3399FF
ブロック色[4] = $000099
ブロック色[5] = $FF33CC
ブロック色[6] = $33CCCC


#-----------------------------------------------------------------------
# 画面の設定
#-----------------------------------------------------------------------
# 画面の左上座標
BLEFTは24
BTOPは12

画面クリア
ブロック初期化。

画面の可視はオフ。
画面のXは、300
画面のYは、BTOP
画面のWは、CHW×ブロック横
画面のHは、CHH×ブロック縦

落ちモノ出現処理。
ブロック表示処理。
描画処理反映。

#-----------------------------------------------------------------------
# ゲームメインループ
#-----------------------------------------------------------------------
１の間
　　メイン処理
#-----------------------------------------------------------------------

●メイン処理
    終了フラグは０
    （終了フラグ＝０）の間
        （レベル）回
        　　キー処理。
            もし、ダウンフラグがオフならば
            　　0.05秒待つ
        落下処理。
        もし、ダウンフラグがオフならば
        　　(0.02*レベル)秒待つ
    #ループから抜けた時
    「ゲームオーバー。続けますか？」と二択。
    もし、それがいいえならば、終わり。
    ブロック初期化。

●キー処理
　　F変形とは整数
    Fとは整数
　　Bとは文字列
    XXとは整数
    YYとは整数
    XX＝落下X
    YY＝落下Y
    F変形=0
    もし(VK_LEFTのキー状態=オン)ならば
　　　　F=落下衝突判定（落下X-1,落下Y)
        もし、F=０ならば
        　　落下X=落下X-1
　　もし(VK_RIGHTのキー状態=オン)ならば
　　　　F=落下衝突判定（落下X+1,落下Y)
        もし、F=０ならば
        　　落下X=落下X+1
　　もし(VK_DOWNのキー状態=オン)ならば
    　　ダウンフラグ＝オン
    違えば
    　　ダウンフラグ＝オフ
    もし(VK_SPACEのキー状態=オン)||
        (VK_UPのキー状態=オン)ならば
　　    B=落下形状
        落下形状を表右回転して落下形状に代入。
        落下Wは表列数（落下形状）
        落下Hは表行数（落下形状）
    　　F=落下衝突判定（落下X,落下Y）
        もし、F=1ならば # 変形失敗
　　　　　　落下形状=B  # 元に戻す
            落下Wは表列数（落下形状）
            落下Hは表行数（落下形状）
        違えば
        　　F変形=1
　　もし、(XX<>落下X)||(YY<>落下Y)||(F変形==1)ならば
    　　落ちモノ画面合成。
        ブロック表示処理。
        0.10秒待つ。

●ブロック表示処理
　　XXとは整数
    YYとは整数
    CCとは整数
    # 並べて表示
    画面を白色で画面クリア
　　Yで０からブロック縦-1まで繰り返し
    　　Xで０からブロック横-1まで繰り返し
　　　　　　XX=X*CHW
            YY=Y*CHH
            CC=ブロック[Y][X]
            もし、CC>0ならば
            　　線太さは1
                塗り色はブロック色[CC]
                線色は白色
                BOX(画面, XX, YY, XX+CHW, YY+CHH)
    画面を母艦のBLEFT,BTOPへ、画像コピー。
    描画処理反映。


●落ちモノ出現処理
    BCとは整数
    
    # どのブロックが出現
　　落下形状は落ちモノ[落ちモノ数の乱数]
    落下形状は落下形状をCSV取得。
    落下Wは落下形状の表列数
    落下Hは落下形状の表行数
    # どの位置に出現するか
    落下Xは(ブロック横-落下W-2)の乱数+1。
    落下Yは０


●落ちモノ画面合成
    BXとは整数
    BYとは整数
    
    # 画面に埋め込み
    ブロックに固定ブロックをデータコピー。
    Yで0から落下H-1まで繰り返し
    　　Xで0から落下W-1まで繰り返し
        　　BX＝X＋落下X
            BY＝Y＋落下Y
            もし、落下形状[Y][X]>=1ならば
            　　ブロック[BY][BX] = 落下形状[Y][X]

●落下処理
　　BXとは整数
    BYとは整数
    BCとは整数
    KCとは整数
　　衝突フラグとは整数
　　
    # 落下中のブロックが壁にぶつかるか判定
    衝突フラグは落下衝突判定(落下X, 落下Y+1)
    もし、衝突フラグ=１ならば
        落ちモノ固定処理。
        ブロック消去判定。
    　　もし、落下Y＝０ならば
        　　ブロック表示処理。
            終了フラグは１
            戻る。
        キー処理。
        落ちモノ出現処理。
    違えば
        落下Y=落下Y+1
    　　落ちモノ画面合成
　　　　ブロック表示処理。


●ブロック初期化
    # 0 で初期化
    Yをブロック縦-1から０まで繰り返す
　　　　Xをブロック横-1から０まで繰り返す
        　　ブロック[Y][X] = 0
    # 壁を作る
    Xを0からブロック横-1まで繰り返す
　　　　ブロック[ブロック縦-1][X] = 1
    Yを0からブロック縦-1まで繰り返す
　　　　ブロック[Y][0] = 1
　　　　ブロック[Y][ブロック横-1] = 1
    
    固定ブロックにブロックをデータコピー。
    ダウンフラグはオフ
    スコアは０
    レベルは８
    母艦は「なでりす　点数={スコア}　レベル={レベル}」

●落下衝突判定(RX, RYで)
    # 落下中のブロックが壁にぶつかるか判定
    BXとは整数
    BYとは整数
    BCとは整数
    KCとは整数
    FLGとは整数
    
    FLGは０
    Yで0から落下H-1まで繰り返し
    　　Xで0から落下W-1まで繰り返し
        　　BYはRY＋Y
            BXはRX＋X
            BCは固定ブロック[BY][BX]
            KCは落下形状[Y][X]
            もし、(BC>0)かつ(KC>0)ならば
            　　FLGは１
    それはFLG

●落ちモノ固定処理
　　落ちモノ画面合成。
    固定ブロックにブロックをデータコピー。
    もし、ダウンフラグが１ならば
    　　ダウンフラグ＝オフ
        0.5秒待つ。

●ブロック消去判定
　　CNTとは整数
    HEADとは文字列
　　連鎖とは整数
    
    # 補完用ヘッダ
    Xを0からブロック横-1まで繰り返す
    　　HEAD[X] = 0
    HEAD[0] = 1
    HEAD[ブロック横-1] = 1
    
    連鎖＝０
    Y = ブロック縦-2
    (Y >= 0)の間
    　　CNT=0
    　　Xをブロック横-2から1まで繰り返し
        　　もし、固定ブロック[Y][X]＞０ならば、CNT=CNT+1
        もし、CNT >= (ブロック横-2)ならば
            固定ブロックのYを配列削除
            固定ブロックの0にHEADを配列挿入
            連鎖＝連鎖＋１
        違えば
        　　Y=Y-1
    もし、連鎖＞０ならば
　　　　スコア＝スコア＋(連鎖＾2)
　　　　母艦＝「なでりす　点数={スコア}　レベル={レベル}」
        もし、(スコア%4==0)ならば
        　　レベル＝レベル-1
            もし、レベルが０ならば、レベル＝１
