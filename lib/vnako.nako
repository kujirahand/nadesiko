#<vnako>
#=======================================================================
# VNAKO.EXE(なでしこ with Delphi VCL)のための定義ファイル
#-------------------------------------------------------------------------------
!変数宣言が必要
# CONST
!変数宣言はシステム
!VCL_GUI_BUTTON = 0
!VCL_GUI_EDIT   = 1
!VCL_GUI_MEMO   = 2
!VCL_GUI_LIST   = 3
!VCL_GUI_COMBO  = 4
!VCL_GUI_BAR    = 5
!VCL_GUI_PANEL  = 6
!VCL_GUI_CHECK  = 7
!VCL_GUI_RADIO  = 8
!VCL_GUI_GRID   = 9
!VCL_GUI_IMAGE  = 10
!VCL_GUI_LABEL  = 11
!VCL_GUI_MENUITEM = 12
!VCL_GUI_TABPAGE = 13
!VCL_GUI_CALENDER = 14
!VCL_GUI_TREEVIEW = 15
!VCL_GUI_LISTVIEW = 16
!VCL_GUI_STATUSBAR = 17
!VCL_GUI_TOOLBAR   = 18
!VCL_GUI_TIMER     = 19
!VCL_GUI_WEBBROWSER = 20
!VCL_GUI_SPINEDIT   = 21
!VCL_GUI_TRACKBOX   = 22
!VCL_GUI_TEDITOR    = 23
!VCL_GUI_PROPEDIT   = 25
!VCL_GUI_FORM       = 26;
!VCL_GUI_MAINMENU   = 27;
!VCL_GUI_POPUPMENU  = 28;
!VCL_GUI_SPLITTER   = 29;
!VCL_GUI_IMAGELIST  = 30;
!VCL_GUI_TOOLBUTTON = 31;
!VCL_GUI_TREENODE   = 32;
!VCL_GUI_ANIME      = 33;
!VCL_GUI_PIC_BUTTON = 34;
!VCL_GUI_BIT_BUTTON   = 35;
!VCL_GUI_SCROLL_PANEL = 36;
!VCL_GUI_PROGRESS = 37;
!VCL_GUI_GROUPBOX = 38;
!VCL_GUI_UBUTTON = 39;
!VCL_GUI_UEDIT   = 40;
!VCL_GUI_UMEMO   = 41;
!VCL_GUI_ULIST   = 42;
!VCL_GUI_UCOMBO  = 43;
!VCL_GUI_UCHECK  = 44;
!VCL_GUI_URADIO  = 45;
!VCL_GUI_UGRID   = 46;
!VCL_GUI_ULABEL  = 47;
!VCL_GUI_RADIOGROUP = 48;

//BASIC PROPERTY
!VCL_PROP_NAME   = 0;
!VCL_PROP_ID     = 1;
!VCL_PROP_HANDLE = 2;
//SIZE
!VCL_PROP_X = 10;
!VCL_PROP_Y = 11;
!VCL_PROP_W = 12;
!VCL_PROP_H = 13;
//OPTION
!VCL_PROP_TEXT    = 14;
!VCL_PROP_VALUE   = 15;
!VCL_PROP_ITEM    = 16;
!VCL_PROP_SEL_TEXT   = 17;
!VCL_PROP_SEL_START  = 18;
!VCL_PROP_SEL_LENGTH = 19;
!VCL_PROP_LAYOUT  = 20;
!VCL_PROP_PARENT  = 21;
!VCL_PROP_VISIBLE = 22;
!VCL_PROP_ENABLED = 23;
!VCL_PROP_DRAGMODE = 24;
!VCL_PROP_FILEDROP = 25;
!VCL_PROP_HINT = 26;

#-------------------------------------------------------------------------------
●初期テキスト切り出し(名前から部品名を）
　　名前で部品名が何バイト目か。
　　もし（それ＞１）ならば
　　　　名前から部品名まで切り取る。
　　違えば
　　　　それは名前。

#-------------------------------------------------------------------------------
#<GUI>
■GUI部品
　・オブジェクト# GUI部品のオブジェクト(VCLクラスのポインタ)を指す
　・{非公開}OBJ取得〜それはオブジェクト。
　・{非公開}OBJ設定(V)〜オブジェクトはV。
　・{非公開}OBJ ←OBJ設定 →OBJ取得 デフォルト
　・ID〜# GUI部品の番号(VCLクラス(OBJ).Tagに記録される)
　　　VCL_GET(オブジェクト, VCL_PROP_ID)
　・{非公開}X設定(V)〜VCL_SET(オブジェクト, VCL_PROP_X, V)
　・{非公開}X取得〜   VCL_GET(オブジェクト, VCL_PROP_X)
　・X　←X設定　→X取得 # 部品のX座標
　・左　←X設定　→X取得 # 部品のX座標
　・{非公開}Y設定(V)〜VCL_SET(オブジェクト, VCL_PROP_Y, V)
　・{非公開}Y取得〜   VCL_GET(オブジェクト, VCL_PROP_Y)
　・Y　←Y設定　→Y取得 # 部品のY座標
　・上　←Y設定　→Y取得 # 部品のY座標
　・{非公開}W設定(V)〜VCL_SET(オブジェクト, VCL_PROP_W, V)
　・{非公開}W取得〜   VCL_GET(オブジェクト, VCL_PROP_W)
　・W　←W設定　→W取得 # 部品の幅
　・{非公開}H設定(V)〜VCL_SET(オブジェクト, VCL_PROP_H, V)
　・{非公開}H取得〜   VCL_GET(オブジェクト, VCL_PROP_H)
　・H　←H設定　→H取得 # 部品の高さ
  ・幅　←W設定　→W取得 # 部品の幅
  ・高さ←H設定　→H取得 # 部品の高さ
　・{非公開}レイアウト設定(V)〜VCL_SET(オブジェクト, VCL_PROP_LAYOUT, V)
　・{非公開}レイアウト取得〜　 VCL_GET(オブジェクト, VCL_PROP_LAYOUT)
　・レイアウト　←レイアウト設定　→レイアウト取得 # 自動レイアウト(上|下|左|右|全体)を文字列で指定する
　・{非公開}親部品設定({グループ}V)〜
　　　「V」の変数確認
　　　もしそれ!=「グループ」ならば
　　　　VCL_SET(オブジェクト, VCL_PROP_PARENT, 「」)
　　　違えば
　　　　VCL_SET(オブジェクト, VCL_PROP_PARENT, V→オブジェクト)
　・{非公開}親部品取得〜　 VCL_GET(オブジェクト, VCL_PROP_PARENT)
　・親部品　←親部品設定　→親部品取得 # 親となる部品
　・{非公開}親オブジェクト設定(Vを)〜VCL_SET(オブジェクト, VCL_PROP_PARENT, V) # for TEST
　・{非公開}可視設定(V)〜VCL_SET(オブジェクト, VCL_PROP_VISIBLE, V)
　・{非公開}可視取得〜　 VCL_GET(オブジェクト, VCL_PROP_VISIBLE)
　・可視　←可視設定　→可視取得 # オン|オフを指定し、オフを指定すると見えなくなる
　・{非公開}有効設定(V)〜VCL_SET(オブジェクト, VCL_PROP_ENABLED, V)
　・{非公開}有効取得〜　 VCL_GET(オブジェクト, VCL_PROP_ENABLED)
　・有効　←有効設定　→有効取得 # オン|オフを指定し、利用できない状態にする
　・{非公開}F最前面表示{=0}
　・{非公開}最前面表示取得〜それはF最前面表示
　・{非公開}最前面表示設定(Vに)〜
　　　F最前面表示はV
　　　もし、Vがオンならば、自身をシステム:最前面
　　　違えば、自身をシステム:最背面
　・最前面表示←最前面表示設定　→最前面表示取得 # 部品を最前面に表示する
　・最前面解除〜自身のシステム:最背面
　・ポケット # 一時データの格納に使える
　・タグ # 一時データの格納に使える
　・壊す〜 # 部品を削除する
　　　VCL_FREE(自身)
　・{非公開}Fヒント
　・{非公開}ヒント設定(V)〜
　　　VCL_SET(オブジェクト,VCL_PROP_HINT,V)
　　　Fヒント＝V
　・{非公開}ヒント取得〜それはFヒント。
　・ヒント←ヒント設定→ヒント取得 # ポップアップヒントに表示する文を指定する
　・{非公開}位置取得〜それは「{X},{Y}」
　・{非公開}位置設定(V)〜
　　　X=Vの「,」まで切り取ったもの
　　　Y=Vの「,」まで切り取ったもの
　・位置←位置設定→位置取得 # 部品の座標を「X,Y」の形式(文字列)で「10,10」のように指定する
　・{非公開}サイズ取得〜それは「{X},{Y},{X+W},{Y+H}」
　・{非公開}サイズ設定(V)〜
　　　X=Vの「,」まで切り取ったもの
　　　Y=Vの「,」まで切り取ったもの
　　　W=(Vの「,」まで切り取ったもの)-X
　　　H=(Vの「,」まで切り取ったもの)-Y
　・サイズ←サイズ設定→サイズ取得 # 部品のサイズを「X1,Y1.X2.Y2」の形式(文字列)で「10,10,100,30」のように指定する
　・下側〜それは「{X},{Y+H+部品間隔}」# 部品の下側の位置を返す
　・右側〜それは「{X+W+部品間隔},{Y}」# 部品の下側の位置を返す

■ウィンドウ部品　+GUI部品
　・ハンドル〜# 部品のウィンドウハンドルを取得する
　　　VCL_GET(オブジェクト, VCL_PROP_HANDLE)
　・注目〜 # フォーカスをあわせる
　　　SetFocus(ハンドル)
　・メッセージ送信（MSG,W,L)〜# 部品に Windows API を使ってメッセージを送信する
　　　SendMessage(ハンドル,MSG,W,L)

■グラフィック部品　+GUI部品
　・ハンドル〜# 部品のデバイスコンテキストハンドルを取得する
　　　VCL_GET(オブジェクト, VCL_PROP_HANDLE)

■クライアントサイズプロパティ +GUI部品
　・{非公開}ＣＷ取得〜VCL_COMMAND(オブジェクト, "CW取得",0)
　・{非公開}ＣＷ設定(V)〜VCL_COMMAND(オブジェクト, "CW設定",V)
　・クライアントＷ←ＣＷ設定　→ＣＷ取得
　・クライアント幅←ＣＷ設定　→ＣＷ取得 # フォームの内側の幅
　・ＣＷ←ＣＷ設定　→ＣＷ取得
　・{非公開}ＣＨ取得〜VCL_COMMAND(オブジェクト, "CH取得",0)
　・{非公開}ＣＨ設定(V)〜VCL_COMMAND(オブジェクト, "CH設定",V)
　・クライアントＨ←ＣＨ設定　→ＣＨ取得
　・クライアント高さ←ＣＨ設定　→ＣＨ取得# フォームの内側の高さ
　・ＣＨ←ＣＨ設定　→ＣＨ取得

■テキストプロパティ
　・{非公開}オブジェクト
　・{非公開}テキスト取得〜   VCL_GET(オブジェクト, VCL_PROP_TEXT)
　・{非公開}テキスト設定(V)〜VCL_SET(オブジェクト, VCL_PROP_TEXT, V)
　・テキスト ←テキスト設定 →テキスト取得　デフォルト

■選択テキストプロパティ
　・{非公開}オブジェクト
　・{非公開}選択文字列取得〜   VCL_GET(オブジェクト, VCL_PROP_SEL_TEXT)
　・{非公開}選択文字列設定(V)〜VCL_SET(オブジェクト, VCL_PROP_SEL_TEXT, V)
　・選択文字列 ←選択文字列設定 →選択文字列取得
　・{非公開}選択位置取得〜   VCL_GET(オブジェクト, VCL_PROP_SEL_START)
　・{非公開}選択位置設定(V)〜VCL_SET(オブジェクト, VCL_PROP_SEL_START, V)
　・選択位置 ←選択位置設定 →選択位置取得
　・{非公開}選択文字数取得〜   VCL_GET(オブジェクト, VCL_PROP_SEL_LENGTH)
　・{非公開}選択文字数設定(V)〜VCL_SET(オブジェクト, VCL_PROP_SEL_LENGTH, V)
　・選択文字数 ←選択文字数設定 →選択文字数取得

■フォントプロパティ
　・{非公開}オブジェクト
  ・{非公開}文字書体ＳＥＴ（Ｖ）　〜　VCL_COMMAND(オブジェクト,"文字書体SET",V)
　・{非公開}文字書体ＧＥＴ　　　　〜　VCL_COMMAND(オブジェクト,"文字書体GET",0)
  ・{非公開}文字サイズＳＥＴ（Ｖ）〜　VCL_COMMAND(オブジェクト,"文字サイズSET",V)
　・{非公開}文字サイズＧＥＴ　　　〜　VCL_COMMAND(オブジェクト,"文字サイズGET",0)
  ・{非公開}文字色ＳＥＴ（Ｖ）〜　VCL_COMMAND(オブジェクト,"文字色SET",V)
　・{非公開}文字色ＧＥＴ　　　〜　VCL_COMMAND(オブジェクト,"文字色GET",0)
　・文字書体　　←文字書体ＳＥＴ　　→文字書体ＧＥＴ
　・文字サイズ　←文字サイズＳＥＴ　→文字サイズＧＥＴ
　・文字色　　　←文字色ＳＥＴ　　　→文字色ＧＥＴ

■メニュー　+ウィンドウ部品　+テキストプロパティ
　・{イベント}クリックした時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_MENUITEM)
　　　テキストは、名前から「メニュー」を初期テキスト切り出し
　・追加({グループ}メニュー変数を)〜
　　　VCL_COMMAND(オブジェクト, "追加", メニュー変数→オブジェクト)
　・{非公開}チェック設定(Vに)〜　VCL_COMMAND(オブジェクト, "チェック設定", V)
  ・{非公開}チェック取得〜　     VCL_COMMAND(オブジェクト, "チェック取得", 0)
　・チェック　←チェック設定　→チェック取得
　・{非公開}ショートカット設定(Vに)〜　VCL_COMMAND(オブジェクト, "ショートカット設定", V)
  ・{非公開}ショートカット取得〜　     VCL_COMMAND(オブジェクト, "ショートカット取得", 0)
　・ショートカット　←ショートカット設定　→ショートカット取得

■ポップアップメニュー　+ウィンドウ部品
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_POPUPMENU)
　・追加({グループ}メニュー変数を)〜
　　　VCL_COMMAND(オブジェクト, "追加", メニュー変数→オブジェクト)
  ・一括追加(Sで|Sを|Sの)〜 # 親部品名,部品名,テキスト,ショートカット,オプション,イベント
　　　自身にＳをポップアップメニュー一括作成。

■ポップアッププロパティ
　・{非公開}オブジェクト
　・{非公開}Fポップアップメニュー
　・{非公開}ポップアップメニュー設定({ポップアップメニュー}Vを)〜
　　　Fポップアップメニューは、V
　　　VCL_COMMAND(オブジェクト,"POPUP",Vのオブジェクト)
　・{非公開}ポップアップメニュー取得〜それは、Fポップアップメニュー。
  ・ポップアップメニュー　←ポップアップメニュー設定　→ポップアップメニュー取得

■ドロッププロパティ
　・{非公開}オブジェクト
　・マウスX        # マウスイベント発生時設定される
　・マウスY        # マウスイベント発生時設定される
　・{非公開}ドラッグモード取得〜VCL_GET(オブジェクト, VCL_PROP_DRAGMODE)
　・{非公開}ドラッグモード設定(V)〜VCL_SET(オブジェクト, VCL_PROP_DRAGMODE, V)
  ・ドラッグモード　←ドラッグモード設定　→ドラッグモード取得 #オン(=1)|オフ(=0)
  ・{イベント}ドロップ許可する時  # ドラッグ&ドロップを許可する時、イベントの中でドロップ許可をオンにする
  ・{イベント}ドロップされた時    # ドラッグ&ドロップされた時に発生するイベント マウスX,マウスYを設定する
  ・ドロップ許可{=0} # 1=許可/0=許可しない
  ・ドロップ部品     # ドロップされた時に設定される
  ・{イベント}ファイルドロップされた時
  ・{非公開}Fファイルドロップ許可{=0}
  ・{非公開}ファイルドロップ許可設定(V)〜VCL_SET(オブジェクト, VCL_PROP_FILEDROP, V)
  ・{非公開}ファイルドロップ許可取得〜それはFファイルドロップ許可
  ・ファイルドロップ許可　←ファイルドロップ許可設定　→ファイルドロップ許可取得
  ・ドロップファイル # ファイルがドロップされた時に設定される

■マウス入出イベントプロパティ
　・{イベント}マウス入った時
　・{イベント}マウス出た時

■マウス一般イベントプロパティ
　・{イベント}マウス移動した時
　・{イベント}マウス押した時
　・{イベント}マウス離した時
　・押されたボタン # マウスイベント発生時設定される （右|左|中央）
　・マウスX        # マウスイベント発生時設定される
　・マウスY        # マウスイベント発生時設定される
　・シフトキー     # マウスイベント発生時設定される (SHIFT|CTRL|ALT)
　・マウス位置〜それは「{自身→マウスX},{自身→マウスY}」

■マウスイベントプロパティ　+マウス入出イベントプロパティ　+マウス一般イベントプロパティ
　・{非公開}オブジェクト

■マウスホイールイベントプロパティ
　・{非公開}オブジェクト
  ・{イベント}マウスホイール回した時
  ・ホイール値     # マウスホイール回した時設定される

■マウスプロパティ　+マウスイベントプロパティ　+マウスホイールイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ
　・{非公開}オブジェクト

■キーボードプロパティ
　・{非公開}オブジェクト
　・{イベント}キー押した時＃変数『押された仮想キー』にキー番号が『シフトキー』に同時押しキーが入る
　・{イベント}キータイピング時 # 変数『押されたキー』にキーが入る
　・{イベント}キー離した時＃変数『押された仮想キー』にキー番号が『シフトキー』に同時押しキーが入る
　・押されたキー       # キータイピング時に設定される
　・押された仮想キー   # キー押した時｜キー離した時に設定される
　・シフトキー         # キーイベント発生時設定される(SHIFT|CTRL|ALT)

■色プロパティ
　・{非公開}オブジェクト
  ・{非公開}色設定(V)〜VCL_COMMAND(オブジェクト,"SETCOLOR",V)
  ・{非公開}色取得〜   VCL_COMMAND(オブジェクト,"GETCOLOR",0)
  ・色　←色設定　→色取得

■背景色プロパティ
　・{非公開}オブジェクト
　・{非公開}背景色取得〜VCL_COMMAND(オブジェクト,"背景色取得", 0)
　・{非公開}背景色設定(V)〜VCL_COMMAND(オブジェクト,"背景色設定", V)
　・背景色　←背景色設定　→背景色取得

#-------------------------------------------------------------------------------
# メニュー系

■イメージリスト +ウィンドウ部品
　・種類{="イメージリスト"}
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_IMAGELIST)
　・追加(画像ファイルを)〜
　　　VCL_COMMAND(オブジェクト, "追加", 画像ファイル)
　・一括追加（画像ファイルを）〜
　　　VCL_COMMAND(オブジェクト, "一括追加", 画像ファイル)
　・置換(NOに画像ファイルを)〜
　　　VCL_COMMAND(オブジェクト, "置換", NO&"@"&画像ファイル)　
　・初期化〜
　　　VCL_COMMAND(オブジェクト, "初期化", 0)
　・{非公開}画像W設定(V)〜VCL_COMMAND(オブジェクト, "画像W設定", V)
　・{非公開}画像W取得〜   VCL_COMMAND(オブジェクト, "画像W取得", 0)
　・画像W　←画像W設定　→画像W取得
　・{非公開}画像H設定(V)〜VCL_COMMAND(オブジェクト, "画像H設定", V)
　・{非公開}画像H取得〜   VCL_COMMAND(オブジェクト, "画像H取得", 0)
　・画像H　←画像H設定　→画像H取得

■ツールボタン +ウィンドウ部品　+マウスイベントプロパティ　+ポップアッププロパティ
　・種類{="ツールボタン"}
　・{イベント}クリックした時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_TOOLBUTTON)
　・画像番号設定(V)〜
　　　VCL_COMMAND(オブジェクト, "画像設定", V)
　・画像番号取得〜
　　　VCL_COMMAND(オブジェクト, "画像取得", 0)
　・画像番号　←画像番号設定　→画像番号取得

■ツールバー +ウィンドウ部品　+マウスイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ
　・種類{="ツールバー"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・{イベント}変更した時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_TOOLBAR)
　・画像設定({イメージリスト}Vを)〜
　　　VCL_COMMAND(オブジェクト, "画像設定", Vのオブジェクト)
　・追加({ツールボタン}ツールボタン変数を)〜
　　　VCL_COMMAND(オブジェクト, "追加", ツールボタン変数のオブジェクト)
　・一括作成(Sを|Sで)〜
　　　自身に、Sを、ツールボタン一括作成。

■メインメニュー　+ウィンドウ部品
　・種類{="メインメニュー"}
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_MAINMENU)
　・追加({グループ}メニュー変数を)〜
　　　VCL_COMMAND(オブジェクト, "追加", メニュー変数→オブジェクト)

#-------------------------------------------------------------------------------

■エディタ系部品 +ウィンドウ部品 +テキストプロパティ +選択テキストプロパティ +フォントプロパティ +キーボードプロパティ +背景色プロパティ
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・{イベント}変更した時
　・切り取り　〜＃切り取ってクリップボードに入れる
　　　VCL_COMMAND(オブジェクト,"CUT",0)
　・コピー　　〜＃コピーしてクリップボードに入れる
　　　VCL_COMMAND(オブジェクト,"COPY",0)
　・貼り付け　〜＃クリップボードから貼り付け
　　　VCL_COMMAND(オブジェクト,"PASTE",0)
　・UNDO〜＃元に戻す（アンドゥ）
　　　VCL_COMMAND(オブジェクト,"UNDO",0)
　・REDO〜＃やり直す（リドゥ）ただしＴエディタのみ
　　　VCL_COMMAND(オブジェクト,"REDO",0)
　・全選択〜＃全てのテキストを選択する
　　　VCL_COMMAND(オブジェクト,"SELECTALL",0)
　・{非公開}行取得　    〜　VCL_COMMAND(オブジェクト,"GETROW",0)
　・{非公開}行設定(V)　 〜　VCL_COMMAND(オブジェクト,"SETROW",V)
　・行　←行設定　→行取得＃行番号を指定する
　・{非公開}列取得　    〜　VCL_COMMAND(オブジェクト,"GETCOL",0)
　・{非公開}列設定(V)　 〜　VCL_COMMAND(オブジェクト,"SETCOL",V)
　・列　←列設定　→列取得＃列番号を指定する
　・{非公開}編集設定(V)〜VCL_COMMAND(オブジェクト,"編集設定",V)
　・{非公開}編集取得〜VCL_COMMAND(オブジェクト,"編集取得",0)
  ・編集 ←編集設定　→編集取得# オン・オフを指定
  ・{非公開}IME取得〜VCL_COMMAND(オブジェクト,"IME取得",0)
  ・{非公開}IME設定(V)〜VCL_COMMAND(オブジェクト,"IME設定",V)
  ・IME←IME設定→IME取得#IMEオン|IMEオフ|IMEかな|IMEカナ|IME半角

■アイテムプロパティ
　・{非公開}オブジェクト
　・{非公開}アイテム取得〜   VCL_GET(オブジェクト, VCL_PROP_ITEM)
　・{非公開}アイテム設定(V)〜VCL_SET(オブジェクト, VCL_PROP_ITEM, V)
　・アイテム ←アイテム設定 →アイテム取得
　・{非公開}値取得〜   VCL_GET(オブジェクト, VCL_PROP_VALUE)
　・{非公開}値設定(V)〜VCL_SET(オブジェクト, VCL_PROP_VALUE, V)
　・値 ←値設定 →値取得

■値プロパティ
　・{非公開}オブジェクト
　・{非公開}値取得〜   VCL_GET(オブジェクト, VCL_PROP_VALUE)
　・{非公開}値設定(V)〜VCL_SET(オブジェクト, VCL_PROP_VALUE, V)
　・値 ←値設定 →値取得

■最大最小プロパティ
　・{非公開}オブジェクト
　・{非公開}F最大値
　・{非公開}F最小値
　・{非公開}最大値取得〜それはＦ最大値
　・{非公開}最小値取得〜それはＦ最小値
　・{非公開}最大値設定(V)〜
　　　VCL_COMMAND(オブジェクト,"最大値",V)
　　　F最大値＝V
　・{非公開}最小値設定(V)〜
　　　VCL_COMMAND(オブジェクト,"最小値",V)
　　　F最小値＝V
　・最大値　←最大値設定　→最大値取得
　・最小値　←最小値設定　→最小値取得


#-------------------------------------------------------------------------------
# パネル・フォーム系部品

■フォーム +ウィンドウ部品 +マウスプロパティ +キーボードプロパティ +フォントプロパティ +背景色プロパティ +クライアントサイズプロパティ
　・種類{="フォーム"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・{イベント}サイズ変更した時
　・{イベント}表示した時
　・{イベント}閉じた時
　・{イベント}アクティブ化した時
　・{イベント}アクティブ時   # アプリケーションがアクティブになった時
　・{イベント}非アクティブ時 # アプリケーションが非アクティブになった時
　・{イベント}最小化した時   # アプリケーションが最小化した時
　・{イベント}元通り時       # アプリケーションが元通りになった時
　・{イベント}デバイス挿入した時 # 変数「それ」にドライブ名が入る
　・{イベント}デバイス削除した時 # 変数「それ」にドライブ名が入る
　・{イベント}描画する時 # フォームが描画される直前に発生
　・終了可能{=1} # 閉じた時に、0 に設定すると終了しなくなる
　・{イベント}COPYDATA受けた時
　・CD文字列 # COPYDATA受けた時に設定される
　・CD_ID    # COPYDATA受けた時に設定される
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_FORM)
　・背景ハンドル〜　# フォーム再描画用ビットマップへのハンドル
　　　VCL_COMMAND(オブジェクト, "背景ハンドル","") 
　・モーダル表示〜＃親フォームをロックして表示する
　　　VCL_COMMAND(オブジェクト, "モーダル表示","")
　・表示〜＃フォームを表示する
　　　VCL_COMMAND(オブジェクト, "表示","")
　・{非公開}テキスト取得〜VCL_GET(オブジェクト, VCL_PROP_TEXT)
　・{非公開}テキスト設定(V)〜
　　　VCL_SET(オブジェクト, VCL_PROP_TEXT, V)
　　　描画処理反映。# 途中経過簡易表示につかうことが多いので
　・テキスト←テキスト設定 →テキスト取得　デフォルト# フォームキャプションの変更
　・タイトル←テキスト設定 →テキスト取得 # フォームキャプションの変更
　・{非公開}Fスタイル
　・{非公開}スタイル設定(Vに)〜
　　　Fスタイルはそれ。VCL_COMMAND(オブジェクト, "スタイル設定",V)
　・{非公開}スタイル取得〜それはFスタイル
　・スタイル　←スタイル設定　→スタイル取得 #枠なし|枠固定|枠可変|ダイアログスタイル|ツールウィンドウ
　・アイコン設定(Vを|Vに|Vで)〜＃アイコンを設定する
　　　VCL_COMMAND(オブジェクト, "アイコン設定",V)
　・閉じる〜＃ウィンドウを閉じる
　　　VCL_COMMAND(オブジェクト, "閉じる",0)
　・タスクトレイ入れる〜#タスクトレイにアイコンを表示し母艦を隠す
　　　VCL_COMMAND(オブジェクト, "タスクトレイ入れる",0)
　・タスクトレイ出す〜#タスクトレイからアイコンを消し、母艦を表示する
　　　VCL_COMMAND(オブジェクト, "タスクトレイ出す",0)
　・タスクトレイ表示〜#タスクトレイにアイコンを表示する（母艦を隠さない）
　　　VCL_COMMAND(オブジェクト, "タスクトレイ表示",0)
　・タスクトレイ非表示〜#タスクトレイからアイコンを消す（母艦を表示しない）
　　　VCL_COMMAND(オブジェクト, "タスクトレイ非表示",0)
　・{イベント}タスクトレイクリックした時
　・{イベント}タスクトレイ右クリックした時
　・{イベント}タスクトレイ通過した時
　・{イベント}タスクトレイバルーンクリックした時
　・タスクトレイバルーン表示(Vを)〜
　　　VCL_COMMAND(オブジェクト, "タスクトレイバルーン表示",V)
　・タスクトレイバルーン非表示()〜
　　　VCL_COMMAND(オブジェクト, "タスクトレイバルーン非表示",0)
　・{非公開}バルーンオプション設定(V)〜VCL_COMMAND(オブジェクト, "タスクトレイバルーンオプションSET",V)
　・{非公開}バルーンオプション取得〜VCL_COMMAND(オブジェクト, "タスクトレイバルーンオプションGET","")
　・タスクトレイバルーンオプション　←バルーンオプション設定　→バルーンオプション取得
　・{非公開}F画像
　・{非公開}画像設定(FILEを|FILEから)〜
　　　F画像=FILE
　　　VCL_COMMAND(オブジェクト, "画像設定",FILE)
　・{非公開}画像取得〜それはＦ画像
　・画像←画像設定→画像取得 # 背景に描画する画像
　・画像通り変形〜＃画像の形の通りにフォームを変形させる
　　　VCL_COMMAND(オブジェクト, "画像通り変形",0) # フォームを描画されている模様でリージョンを作る
　・{非公開}ドラッグ移動取得〜VCL_COMMAND(オブジェクト, "ドラッグ移動取得",0)
　・{非公開}ドラッグ移動設定(V)〜VCL_COMMAND(オブジェクト, "ドラッグ移動設定",V)
　・ドラッグ移動←ドラッグ移動設定→ドラッグ移動取得 # マウスのドラッグでフォームを移動するかどうか
　・吹き出し変形〜＃吹き出しの形に変形する
　　　VCL_COMMAND(オブジェクト, "吹き出し変形",0) # フォームを吹き出しの形に変形
　・最大化〜＃デスクトップ一杯に最大化する
　　　VCL_COMMAND(オブジェクト, "最大化",0)
　・最小化〜＃最小化する
　　　VCL_COMMAND(オブジェクト, "最小化",0)
　・元通り〜＃最大化・最小化したフォームを元通りにする
　　　VCL_COMMAND(オブジェクト, "元通り",0)
　・{非公開}ウィンドウ状態取得〜VCL_COMMAND(オブジェクト, "ウィンドウ状態取得",0)
　・{非公開}ウィンドウ状態設定(V)〜VCL_COMMAND(オブジェクト, "ウィンドウ状態設定",V)
　・ウィンドウ状態←ウィンドウ状態設定→ウィンドウ状態取得
　・{非公開}透明度設定(Ｖ)〜VCL_COMMAND(オブジェクト, "透明度設定",V)
　・{非公開}透明度取得〜VCL_COMMAND(オブジェクト, "透明度取得",0)
　・透明度←透明度設定→透明度取得#0(透明)〜255(不透明)
　・最大化ボタン有効変更（Vに｜Vへ)〜 #最大化ボタンの有効をオン、オフで切り替える
　　　VCL_COMMAND(オブジェクト, "最大化ボタン有効変更",V)
　・最小化ボタン有効変更（Vに｜Vへ)〜 #最小化ボタンの有効をオン、オフで切り替える
　　　VCL_COMMAND(オブジェクト, "最小化ボタン有効変更",V)
　・システムメニューボタン有効変更（Vに｜Vへ)〜 #システムメニューボタンの有効をオン、オフで切り替える
　　　VCL_COMMAND(オブジェクト, "システムメニューボタン有効変更",V)

■パネル　+ウィンドウ部品　+テキストプロパティ　+マウスイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ　+背景色プロパティ　+フォントプロパティ
　・種類{="パネル"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・{イベント}サイズ変更した時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_PANEL)
　　　# パネルに文字は不要 # テキストは、名前から「パネル」を初期テキスト切り出し
  ・{非公開}スタイル設定(V)〜VCL_COMMAND(オブジェクト, "スタイル設定",V)
  ・{非公開}スタイル取得〜VCL_COMMAND(オブジェクト, "スタイル取得",0)
　・スタイル←スタイル設定→スタイル取得 # 枠なし|凹|凸

■グループボックス　+ウィンドウ部品　+テキストプロパティ　+マウスイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ　+背景色プロパティ　+フォントプロパティ
　・種類{="グループボックス"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_GROUPBOX)
　　　テキストは、名前から「グループボックス」を初期テキスト切り出し

■スクロールパネル　+ウィンドウ部品　+マウスプロパティ　+背景色プロパティ
　・種類{="スクロールパネル"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・{イベント}サイズ変更した時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_SCROLL_PANEL)
　・{非公開}パネル幅取得〜
　　　VCL_COMMAND(オブジェクト, "パネル幅取得",0)
　・{非公開}パネル高取得〜
　　　VCL_COMMAND(オブジェクト, "パネル高取得",0)
　・{非公開}パネル幅設定（Ｖ）〜
　　　VCL_COMMAND(オブジェクト, "パネル幅設定",V)
　・{非公開}パネル高設定（Ｖ）〜
　　　VCL_COMMAND(オブジェクト, "パネル高設定",V)
　・パネル幅←パネル幅設定→パネル幅取得 # スクロールパネルの幅取得
　・パネル高←パネル高設定→パネル高取得 # スクロールパネルの幅取得


■タブページ　+ウィンドウ部品 +マウスイベントプロパティ +テキストプロパティ +ポップアッププロパティ +ドロッププロパティ +クライアントサイズプロパティ
　・種類{="タブページ"}
　・{イベント}変更した時
　・タブ数
　・{配列}シート参照
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_TABPAGE)
　　　タブ数は０
　・タブ追加(タブ名の|タブ名を)〜
　　　シート参照[タブ数] = VCL_COMMAND(オブジェクト, "タブ追加",タブ名)
　　　タブ数=タブ数+1。
　・{非公開}表示タブ設定(V)〜VCL_COMMAND(オブジェクト, "表示タブ設定",V)
　・{非公開}表示タブ取得〜   VCL_COMMAND(オブジェクト, "表示タブ取得","")
　・表示タブ　←表示タブ設定　→表示タブ取得 # タブ番号を指定(0-)
　・{非公開}タブ多段化設定(V)〜VCL_COMMAND(オブジェクト, "タブ多段化設定",V)
　・{非公開}タブ多段化取得〜   VCL_COMMAND(オブジェクト, "タブ多段化取得","")
　・タブ多段化　←タブ多段化設定　→タブ多段化取得 # オンにするとタブページ名を複数行で表示
  ・タブ削除(Vを|Vの)〜＃タブを削除する
  　　VCL_COMMAND(オブジェクト, "タブ削除",V)
　　　タブ数=タブ数-1。

■スプリッタ +ウィンドウ部品
　・種類{="スプリッタ"}
　・{イベント}変更した時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_SPLITTER)

■ステータスバー +ウィンドウ部品 +テキストプロパティ +マウスイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ　+フォントプロパティ
　・種類{="ステータスバー"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・{非公開}分割設定(V)〜VCL_COMMAND(オブジェクト, "分割設定",V)
　・{非公開}分割取得〜   VCL_COMMAND(オブジェクト, "分割取得","")
　・分割　←分割設定　→分割取得 # オンにすると複数項目を表示。各文字列は「テキスト」に配列で指定
　・{非公開}項目幅設定(V)〜VCL_COMMAND(オブジェクト, "項目幅設定",V)
　・{非公開}項目幅取得〜   VCL_COMMAND(オブジェクト, "項目幅取得","")
　・項目幅　←項目幅設定　→項目幅取得 # 分割がオンの時に、各項目の幅を配列で取得/設定ができる
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_STATUSBAR)

#-------------------------------------------------------------------------------
# エディタ系部品

■エディタ　+エディタ系部品　+マウスイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ
　・種類{="エディタ"}
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_EDIT)
　　　#テキストは、名前から「エディタ」を初期テキスト切り出し
　・{非公開}パスワードモード設定(V)〜VCL_COMMAND(オブジェクト,"パスワードモード設定",V)
　・{非公開}パスワードモード取得〜VCL_COMMAND(オブジェクト,"パスワードモード取得",0)
　・パスワードモード←パスワードモード設定→パスワードモード取得

■メモ　+エディタ系部品　+マウスイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ
　・種類{="メモ"}
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_MEMO)
  ・{非公開}スクロールバー取得〜VCL_COMMAND(オブジェクト,"スクロールバー取得",0)
  ・{非公開}スクロールバー設定(V)〜VCL_COMMAND(オブジェクト,"スクロールバー設定",V)
  ・スクロールバー←スクロールバー設定→スクロールバー取得 # ?(縦|横|縦横)
  
■スピンエディタ　+エディタ系部品　+最大最小プロパティ　+マウス一般イベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ
　・種類{="スピンエディタ"}
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_SPINEDIT)

■Tエディタ　+エディタ系部品　+マウス一般イベントプロパティ　+マウスホイールイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ
　・種類{="Tエディタ"}
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_TEDITOR)
　・ダブルクリック単語選択〜 # カーソル位置の単語を選択する
　　　VCL_COMMAND(オブジェクト,"単語選択",0)
　・カラーリング設定(Vに)〜 # HTML/DELPHI/PERL/CPP/JAVA/なでしこ/TEXT
　　　VCL_COMMAND(オブジェクト,"カラーリング",V)
　・カーソルX取得〜# カーソル位置の座標を得る
　　　VCL_COMMAND(オブジェクト,"GETCUR_X",0) 
　・カーソルY取得〜# カーソル位置の座標を得る
　　　VCL_COMMAND(オブジェクト,"GETCUR_Y",0) 
　・カーソルX設定(Vへ|Vに)〜 # 座標Xにカーソルを設定する
　　　VCL_COMMAND(オブジェクト,"SETCUR_X",V)
　・カーソルY設定(Vへ|Vに)〜 # 座標Yにカーソルを設定する
　　　VCL_COMMAND(オブジェクト,"SETCUR_Y",V)
　# ルーラー
  ・{非公開}Fルーラー{=1}
　・{非公開}ルーラー設定(V)〜
  　　VCL_COMMAND(オブジェクト,"ルーラー",V)
      Ｆルーラー=V
　・{非公開}ルーラー取得〜それはＦルーラー。
　・ルーラー　←ルーラー設定 →ルーラー取得 # 1=あり 0=なし
　# 左バー
  ・{非公開}F左バー{=1}
　・{非公開}左バー設定(V)〜
  　　VCL_COMMAND(オブジェクト,"左バー",V)
      F左バー=V
　・{非公開}左バー取得〜それはＦ左バー。
　・左バー←左バー設定→左バー取得 # 1=あり 0=なし
　# 表示記号
  ・{非公開}F表示記号{="タブ,EOF"} 
　・{非公開}表示記号設定(V)〜
  　　VCL_COMMAND(オブジェクト,"表示記号",V)
      F表示記号=V
　・{非公開}表示記号取得〜それはＦ表示記号。
　・表示記号←表示記号設定→表示記号取得 # タブ,スペース,全角スペース,EOF,改行
　# 折り返し
  ・{非公開}F折り返し{=0}
　・{非公開}折り返し設定(V)〜
  　　VCL_COMMAND(オブジェクト,"折り返し",V)
      F折り返し=V
　・{非公開}折り返し取得〜それはＦ折り返し。
　・折り返し←折り返し設定→折り返し取得 # 0=折り返しなし 1以上=折り返しあり
　# 強調語句
  ・{非公開}強調語句設定(V)〜VCL_COMMAND(オブジェクト,"強調語句設定",V)
　・{非公開}強調語句取得(V)〜VCL_COMMAND(オブジェクト,"強調語句取得",V)
　・強調語句　←強調語句設定　→強調語句取得
　・{非公開}オートインデント設定(V)〜VCL_COMMAND(オブジェクト,"オートインデント設定",V)
　・{非公開}オートインデント取得(V)〜VCL_COMMAND(オブジェクト,"オートインデント取得",V)
　・オートインデント　←オートインデント設定　→オートインデント取得
　・設定パネル表示〜＃設定パネルを表示する
　　　VCL_COMMAND(オブジェクト,"設定パネル表示",0)
　・設定保存(Vへ)〜＃エディタ設定をファイルＶへ保存する
　　　VCL_COMMAND(オブジェクト,"設定保存",V)
　・設定読込(Vから|Vを)〜＃ファイルＶからエディタの設定を読み込む
　　　VCL_COMMAND(オブジェクト,"設定読込",V)
　・しおり設定(Vに|Vで)〜# カーソル位置に0..15のしおりを設定する
　　　VCL_COMMAND(オブジェクト,"しおり設定",V) 
　・しおりジャンプ(Vに|Vで)〜 # 0..15の設定されたしおりにジャンプ
　　　VCL_COMMAND(オブジェクト,"しおりジャンプ",V)
　# Tエディタは独自のドロップを監視しているので再定義が必要
　・{イベント}ファイルドロップされた時
　・{非公開}Fファイルドロップ許可{=0}
　・{非公開}ファイルドロップ許可設定(V)〜VCL_COMMAND(オブジェクト, "ファイルドロップ許可設定", V)
　・{非公開}ファイルドロップ許可取得〜VCL_COMMAND(オブジェクト, "ファイルドロップ許可取得", 0)
　・ファイルドロップ許可　←ファイルドロップ許可設定　→ファイルドロップ許可取得
　・ドロップファイル # ファイルがドロップされた時に設定される


■コンボ　+エディタ系部品　+アイテムプロパティ　+マウス入出イベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ
　・種類{="コンボ"}
　・{非公開}リスト行数設定(V)〜VCL_COMMAND(オブジェクト, "リスト行数設定", V)
　・{非公開}リスト行数取得〜VCL_COMMAND(オブジェクト, "リスト行数取得", 0)
　・リスト行数　←リスト行数設定　→リスト行数取得
　・{イベント}リスト開いた時
　・{イベント}リスト閉じた時
　・{イベント}リスト選択した時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_COMBO)

#-------------------------------------------------------------------------------
# リスト系部品
!LB_SETHORIZONTALEXTENT = $194
■リスト　+ウィンドウ部品　+アイテムプロパティ　+テキストプロパティ　+フォントプロパティ +マウスイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ +キーボードプロパティ +背景色プロパティ
  ・種類{="リスト"}
  ・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_LIST)
  ・横スクロール幅設定(Vに|Vで)〜 # -1 でスクロールバーをオフ
  　　メッセージ送信(LB_SETHORIZONTALEXTENT,V,0)


■グリッド　+ウィンドウ部品　+アイテムプロパティ　+テキストプロパティ　+フォントプロパティ +マウスイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ +キーボードプロパティ +背景色プロパティ
　・種類{="グリッド"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_GRID)
  ・{非公開}編集設定(Vに|Vへ)〜VCL_COMMAND(オブジェクト,"編集設定",V)
  ・{非公開}編集取得〜VCL_COMMAND(オブジェクト,"編集取得",0)
  ・編集←編集設定→編集取得 # 編集機能のオン(=1)・オフ(=0)
　・{非公開}行取得　    〜　VCL_COMMAND(オブジェクト,"GETROW",0)
　・{非公開}行設定(V)　 〜　VCL_COMMAND(オブジェクト,"SETROW",V)
　・行　←行設定　→行取得
　・{非公開}列取得　    〜　VCL_COMMAND(オブジェクト,"GETCOL",0)
　・{非公開}列設定(V)　 〜　VCL_COMMAND(オブジェクト,"SETCOL",V)
　・列　←列設定　→列取得
　・{非公開}行選択取得　    〜　VCL_COMMAND(オブジェクト,"行選択取得",0)
　・{非公開}行選択設定(V)　 〜　VCL_COMMAND(オブジェクト,"行選択設定",V)
　・行選択　←行選択設定　→行選択取得 # (オン=1|オフ=0)
  ・セルサイズ自動調節〜＃セルのサイズを自動調節する
  　　VCL_COMMAND(オブジェクト,"セルサイズ自動調節",0)
  ・{非公開}自動ソート取得　    〜　VCL_COMMAND(オブジェクト,"自動ソート取得",0)
　・{非公開}自動ソート設定(V)　 〜　VCL_COMMAND(オブジェクト,"自動ソート設定",V)
  ・自動ソート←自動ソート設定→自動ソート取得


#-------------------------------------------------------------------------------
# ツリー・リスト

■ツリー　+ウィンドウ部品 +テキストプロパティ　+アイテムプロパティ　+フォントプロパティ +マウスイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ +キーボードプロパティ +背景色プロパティ
　・種類{="ツリー"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・{イベント}変更した時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_TREEVIEW)
　・一括作成(Sを|Sで)〜 #親識別名,ノード識別名,テキスト,画像番号,選択画像番号
　　　自身に、Sを、ツリーノード一括作成。
　・一括追加(Sを|Sで)〜
　　　自身に、Sを、ツリーノード一括追加。
　・画像設定({イメージリスト}Vを)〜
　　　VCL_COMMAND(オブジェクト, "画像設定", Vのオブジェクト)
　・削除(番号を)〜
　　　VCL_COMMAND(オブジェクト, "削除", 番号)
  ・スタイル設定(Sに)〜 # 線|ボタン|ルート
　　　VCL_COMMAND(オブジェクト, "スタイル設定", Ｓ)
  ・{非公開}インデント取得〜   VCL_COMMAND(オブジェクト, "インデント取得", 0)
  ・{非公開}インデント設定(V)〜VCL_COMMAND(オブジェクト, "インデント設定", V)
  ・インデント　←インデント設定　→インデント取得
　・{非公開}ＧＥＴ読取専用〜   VCL_COMMAND(オブジェクト, "GET読取専用", 0)
　・{非公開}ＳＥＴ読取専用(V)〜VCL_COMMAND(オブジェクト, "SET読取専用", V)
  ・読取専用　←ＳＥＴ読取専用　→ＧＥＴ読取専用
  ・選択パス取得〜＃選択しているノードを『\』で区切って取得する
  　　VCL_COMMAND(オブジェクト, "選択パス取得", 0)
  ・選択パス設定(Sを|Sに|Sへ)〜＃選択したいノードを『\』区切りで指定する
  　　VCL_COMMAND(オブジェクト, "選択パス設定", S)
  ・ドロップされたパス取得〜＃部品がドロップされた時どのノードにドロップされたかをパス形式で取得する
  　　VCL_COMMAND(オブジェクト, "ドロップパス取得", 0)
  ・ノード調査(X,Yの)〜＃座標X,YにあるノードのIDを得る
  　　VCL_COMMAND(オブジェクト, "ノード調査", "{X},{Y}")
  ・{非公開}選択ID取得〜VCL_COMMAND(オブジェクト, "選択ID取得", 0)
  ・{非公開}選択ID設定(V)〜VCL_COMMAND(オブジェクト, "選択ID設定", V)
　・選択ID　←選択ID設定　→選択ID取得
  ・追加(Sを|Sで)〜#親識別名,ノード識別名,テキスト,画像番号,選択画像番号
　　　自身に、Sを、ツリーノード一括追加。
  ・アイテム数〜＃ノードのアイテム数を得る
  　　VCL_COMMAND(オブジェクト, "アイテム数", 0)
  ・テキスト変更(ノードIDをSに|Sへ)〜
  　　VCL_COMMAND(オブジェクト, "テキスト変更", "{ノードID}={S}")
  ・画像番号変更(ノードIDをVに|Vへ)〜
  　　VCL_COMMAND(オブジェクト, "画像番号変更", "{ノードID}={V}")
  ・選択画像番号変更(ノードIDをVに|Vへ)〜
  　　VCL_COMMAND(オブジェクト, "選択画像番号変更", "{ノードID}={V}")
　・ノード削除(ノードIDを|ノードIDの)〜
  　　VCL_COMMAND(オブジェクト, "ノード削除", "{ノードID}")
  ・ノード開く(ノードIDの|ノードIDを)〜
  　　VCL_COMMAND(オブジェクト, "ノード開く", "{ノードID}")
  ・ノード閉じる(ノードIDの|ノードIDを)〜
  　　VCL_COMMAND(オブジェクト, "ノード閉じる", "{ノードID}")
  ・ノード一段開く(ノードIDの|ノードIDを)〜
  　　VCL_COMMAND(オブジェクト, "ノード一段開く", "{ノードID}")
  ・ノード一段閉じる(ノードIDの|ノードIDを)〜
  　　VCL_COMMAND(オブジェクト, "ノード一段閉じる", "{ノードID}")
  ・ノード番号取得（ノードIDの|ノードIDを|ノードIDで）〜#見つからなければ-1を返す
  　　VCL_COMMAND(オブジェクト, "ノード番号取得", "{ノードID}")
  ・親ノード取得(ノードIDの|ノードIDで|ノードIDを)〜#親がなければ空を返す
  　　VCL_COMMAND(オブジェクト, "親ノード取得", "{ノードID}")
  ・子ノード取得(ノードIDの|ノードIDで|ノードIDを)〜#子がなければ空を返す
  　　VCL_COMMAND(オブジェクト, "子ノード取得", "{ノードID}")
  ・ノード開閉取得(ノードIDの|ノードIDで|ノードIDを)〜#「開」か「閉」を返す
  　　VCL_COMMAND(オブジェクト, "ノード開閉取得", "{ノードID}")
      
■リストビュー　+ウィンドウ部品 +テキストプロパティ　+値プロパティ　+フォントプロパティ +マウスイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ +キーボードプロパティ +背景色プロパティ
　・種類{="リストビュー"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_LISTVIEW)
　・一括作成(Sを|Sで)〜 # 親識別名,ノード識別名,テキスト,画像番号
　　　自身に、Sを、リストアイテム一括作成
　・一括追加(Sを|Sで)〜
      自身に、Sを、リストアイテム一括追加
　・画像設定({イメージリスト}Vを)〜
　　　VCL_COMMAND(オブジェクト, "画像設定", Vのオブジェクト)
　・削除(番号を)〜
　　　VCL_COMMAND(オブジェクト, "削除", 番号)
　・スタイル設定(Sに)〜 # アイコン|スモールアイコン|リスト
　　　VCL_COMMAND(オブジェクト, "スタイル設定", S)
　・複数選択取得〜
　　　VCL_COMMAND(オブジェクト, "複数選択取得", 0)
　・複数選択設定（BOOL）を〜
　　　VCL_COMMAND(オブジェクト, "複数選択設定", BOOL)
　・複数選択←複数選択設定→複数選択取得
　・選択確認(番号を)〜
　　　VCL_COMMAND(オブジェクト, "選択確認", 番号)
　
#-------------------------------------------------------------------------------
# その他の部品

■ボタンイベントプロパティ　+テキストプロパティ +マウスイベントプロパティ　+ポップアッププロパティ +フォントプロパティ
　・{イベント}クリックした時

■ボタン　+ウィンドウ部品　+ボタンイベントプロパティ　+ドロッププロパティ
　・種類{="ボタン"}
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_BUTTON)
　　　テキストは、名前から「ボタン」を初期テキスト切り出し

■画像プロパティ
　・{非公開}オブジェクト
　・{非公開}F画像
　・{非公開}画像設定(V)〜
　　　F画像はV
　　　VCL_COMMAND(オブジェクト, "画像設定", V)
　・{非公開}画像取得〜それはF画像
　・画像←画像設定→画像取得

■ビットボタン　+ボタン　+画像プロパティ
　・種類{="ビットボタン"}
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_BIT_BUTTON)
　　　テキストは、名前から「ボタン」を初期テキスト切り出し

■画像ボタン　+グラフィック部品　+ボタンイベントプロパティ　+画像プロパティ
　・種類{="画像ボタン"}
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_PIC_BUTTON)
　　　テキストは、名前から「ボタン」を初期テキスト切り出し
  ・{非公開}フラット設定(V)〜VCL_COMMAND(オブジェクト, "フラット設定", V)
  ・{非公開}フラット取得〜VCL_COMMAND(オブジェクト, "フラット取得", 0)
  ・フラット←フラット設定→フラット取得

■バー　+ウィンドウ部品　+マウス入出イベントプロパティ　+ドロッププロパティ　+ポップアッププロパティ　+最大最小プロパティ +キーボードプロパティ　+値プロパティ
　・種類{="バー"}
　・{イベント}変更した時
　・値　←値設定　→値取得　デフォルト
　・向き設定(V)〜VCL_COMMAND(オブジェクト, "向き設定", V)
　・向き取得〜VCL_COMMAND(オブジェクト, "向き取得", 0)
　・向き　←向き設定　→向き取得 # 向き(縦|横)を指定する
  ・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_BAR)

■プログレスバー　+ウィンドウ部品　+マウスイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ　+最大最小プロパティ　+値プロパティ
　・種類{="プログレスバー"}
　・値　←値設定　→値取得　デフォルト
  ・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_PROGRESS)
　・値　←値設定　→値取得　デフォルト

■チェック　+ウィンドウ部品　+マウスイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ　+値プロパティ +キーボードプロパティ +フォントプロパティ +テキストプロパティ +背景色プロパティ
　・種類{="チェック"}
　・{イベント}クリックした時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_CHECK)

■ラジオ　+ウィンドウ部品　+アイテムプロパティ　+フォントプロパティ +背景色プロパティ　+テキストプロパティ
　・種類{="ラジオ"}
　・{イベント}クリックした時
　・{非公開}列取得　    〜　VCL_COMMAND(オブジェクト,"GETCOL",0)
　・{非公開}列設定(V)　 〜　VCL_COMMAND(オブジェクト,"SETCOL",V)
　・列　←列設定　→列取得＃列数を指定する
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_RADIO)

■ラジオグループ　+ウィンドウ部品　+アイテムプロパティ　+フォントプロパティ +背景色プロパティ　+テキストプロパティ
　・種類{="ラジオグループ"}
　・{イベント}クリックした時
　・{非公開}列取得　    〜　VCL_COMMAND(オブジェクト,"GETCOL",0)
　・{非公開}列設定(V)　 〜　VCL_COMMAND(オブジェクト,"SETCOL",V)
　・列　←列設定　→列取得＃列数を指定する
　・{非公開}タイトル取得   〜　VCL_COMMAND(オブジェクト,"GETTITLE",0)
　・{非公開}タイトル設定(V)〜　VCL_COMMAND(オブジェクト,"SETTITLE",V)
　・タイトル←タイトル設定 →タイトル取得 # キャプションの変更
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_RADIOGROUP)

■イメージ　+グラフィック部品　+マウスイベントプロパティ　+ポップアッププロパティ +画像プロパティ
　・種類{="イメージ"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_IMAGE)
  ・{非公開}F拡大機能
  ・{非公開}拡大機能設定(Vを)〜
  　　VCL_COMMAND(オブジェクト, "STRETCH", V)
  　　F拡大機能はＶ
  ・{非公開}拡大機能取得〜それはＦ拡大機能
  ・拡大機能　←拡大機能設定　→拡大機能取得
  ・{非公開}F透明化{=0}
  ・{非公開}透明化設定(Vを)〜
      F透明化はV
      VCL_COMMAND(オブジェクト, "透明化設定", V)
  ・{非公開}透明化取得〜それはF透明化
  ・透明化　←透明化設定　→透明化取得
  ・多角形（Ｓで｜Ｓへ）〜
  　　自身のＳへシステム:多角形。
  ・線（X1,Y1からX2,Y2へ)〜
  　　自身のX1,Y1からX2,Y2へシステム:線。
  ・円（X1,Y1からX2,Y2へ)〜
  　　自身のX1,Y1からX2,Y2へシステム:円。
  ・四角（X1,Y1からX2,Y2へ)〜
      自身のX1,Y1からX2,Y2へシステム:四角。
  ・文字描画(XX,YYへSを)〜
  　　自身のXX,YYへSをシステム:文字描画。
  ・文字表示(XX,YYへSを)〜
  　　自身のXX,YYへSをシステム:文字表示。
  ・角丸四角（X1,Y1からX2,Y2へX3,Y3で)〜
  　　自身のX1,Y1からX2,Y2へX3,Y3でシステム:角丸四角。
  ・画面クリア（{=$FFFFFF}RGBで)〜
  　　自身をRGBでシステム:画面クリア。
  
  

■アニメ　+グラフィック部品　+マウス一般イベントプロパティ　+ポップアッププロパティ　+画像プロパティ
　・種類{="アニメ"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_ANIME)
　・GIF画像設定(Vを|Vの|Vで)〜 # アニメとしてアニメＧＩＦ画像を設定する
　　　VCL_COMMAND(オブジェクト, "GIF画像設定", V)
　・{非公開}F表示間隔
　・{非公開}表示間隔設定(Vに)〜
　　　F表示間隔はV
　　　VCL_COMMAND(オブジェクト, "表示間隔設定", V)
　・{非公開}表示間隔取得〜それはF表示間隔
　・表示間隔　←表示間隔設定　→表示間隔取得
　・{非公開}Fボタンモード
　・{非公開}ボタンモード設定(V)〜
　　　FボタンモードはV
      VCL_COMMAND(オブジェクト, "ボタンモード設定", V)
  ・{非公開}ボタンモード取得〜それはFボタンモード
  ・ボタンモード　←ボタンモード設定　→ボタンモード取得 # 0=off/1=mode1/2=mode2
  ・開始〜＃アニメの再生を開始する
  　　VCL_COMMAND(オブジェクト, "開始", 0)
  ・停止〜＃アニメの再生を停止する
  　　VCL_COMMAND(オブジェクト, "停止", 0)
  ・{非公開}再生回数設定（V)〜VCL_COMMAND(オブジェクト, "再生回数設定", V)
  ・{非公開}再生回数取得〜VCL_COMMAND(オブジェクト, "再生回数取得", 0)
  ・再生回数←再生回数設定→再生回数取得

■ラベル　+グラフィック部品　+マウスイベントプロパティ　+ポップアッププロパティ　+テキストプロパティ  +背景色プロパティ +フォントプロパティ
　・種類{="ラベル"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_LABEL)
      テキストは、名前から「ラベル」を初期テキスト切り出し
  ・{非公開}透明設定(V)〜VCL_COMMAND(オブジェクト, "透明設定", V)
  ・{非公開}透明取得〜VCL_COMMAND(オブジェクト, "透明取得", 0)
  ・透明←透明設定→透明取得
  ・{非公開}文字位置設定(V)〜VCL_COMMAND(オブジェクト, "文字位置設定", V)
  ・{非公開}文字位置取得〜VCL_COMMAND(オブジェクト, "文字位置取得", 0)
　・文字位置←文字位置設定→文字位置取得#(左|中央|右)を設定

■カレンダー　+ウィンドウ部品　+マウス入出イベントプロパティ　+ドロッププロパティ　+テキストプロパティ +キーボードプロパティ
　・種類{="カレンダー"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_CALENDER)

■トラック　+グラフィック部品　+マウスイベントプロパティ　+ポップアッププロパティ　+色プロパティ
　・種類{="トラック"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・{イベント}サイズ変更した時
　・{非公開}枠線スタイル設定(V)〜VCL_COMMAND(オブジェクト, "枠線スタイル設定", V)
　・{非公開}枠線スタイル取得〜VCL_COMMAND(オブジェクト, "枠線スタイル取得", 0)
　・枠線スタイル←枠線スタイル設定→枠線スタイル取得
　・{非公開}枠線補正設定(V)〜VCL_COMMAND(オブジェクト, "枠線補正設定", V)
　・{非公開}枠線補正取得〜VCL_COMMAND(オブジェクト, "枠線補正取得", 0)
　・枠線補正←枠線補正設定→枠線補正取得
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_TRACKBOX)

■ブラウザ　+ウィンドウ部品　+テキストプロパティ
　・種類{="ブラウザ"}
　・{非公開}FURL
  ・{非公開}URL取得〜VCL_COMMAND(オブジェクト, "GETURL", 0)
  ・{非公開}URL設定(V)〜FURLにＶを代入して、VCL_COMMAND(オブジェクト, "SETURL", V)
  ・URL　←URL設定　→URL取得
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_WEBBROWSER)
　・{イベント}クリックした時
　・移動許可{=1}  # リンクをクリックした時移動を許可するかどうか
　・移動先URL     # リンクがクリックされた時の移動先URL
  ・{イベント}完了した時 # ナビゲーションが完了した時呼ばれる
  ・{イベント}文書完了した時 # ドキュメントの取得が完了した時呼ばれる
  ・{イベント}ダウンロード完了した時 # ダウンロードが完了した時呼ばれる
  ・{イベント}新窓開いた時 # 新しいウィンドウを開いた時呼ばれる
　・{非公開}F新窓用ブラウザ # 部品のオブジェクトが格納される
  ・{非公開}新窓用ブラウザ取得〜それはF新窓用ブラウザ
  ・{非公開}新窓用ブラウザ設定({ブラウザ}V)〜Ｆ新窓用ブラウザはＶ→オブジェクト
  ・新窓用ブラウザ←新窓用ブラウザ設定→新窓用ブラウザ取得 # 新しいウィンドウを開いたときに表示するブラウザ
  ・新窓禁止{=0} # (1=はい|0=いいえ)新しいウィンドウを開くのを禁止するか
　・戻る  〜＃前のページ戻る
　　　VCL_COMMAND(オブジェクト, "戻る",   0)
　・進む  〜＃戻った時先のページへ進む
　　　VCL_COMMAND(オブジェクト, "進む",   0)
　・ホーム〜＃ホームに指定しているページを開く
　　　VCL_COMMAND(オブジェクト, "ホーム", 0)
  ・タイトル取得〜 # ページタイトルを取得する
  　　VCL_COMMAND(オブジェクト, "タイトル取得", 0)
  ・タイトル→タイトル取得 # ページのタイトルを取得する
  ・{非公開}Ｆ禁止項目
  ・{非公開}禁止項目設定(V)〜Ｆ禁止項目はＶ。VCL_COMMAND(オブジェクト, "禁止項目設定", V)
  ・{非公開}禁止項目取得〜それはＦ禁止項目
  ・禁止項目←禁止項目設定→禁止項目取得#「画像/ビデオ/BGM/スクリプト/JAVA/ActiveX/ActiveXダウンロード/ダイアログ/オフラインモード」を複数選んで指定可能
  ・タグ追加(Vを|Vで|Vの)〜＃ＨＴＭＬタグを追加する
  　　VCL_COMMAND(オブジェクト, "タグ追加", V)
  ・注目〜＃フォーカスを移す
  　　VCL_COMMAND(オブジェクト, "注目", 0)
  ・印刷〜＃ページを印刷する
  　　VCL_COMMAND(オブジェクト, "印刷", 0)
  ・印刷プレビュー〜＃印刷プレビューを表示する
  　　VCL_COMMAND(オブジェクト, "印刷プレビュー", 0)
  ・更新〜＃ページを更新する
  　　VCL_COMMAND(オブジェクト, "更新", 0)
  ・保存〜＃ページの保存ダイアログを出す
  　　VCL_COMMAND(オブジェクト, "保存", 0)

■プロパティエディタ　+ウィンドウ部品　+マウスイベントプロパティ　+ポップアッププロパティ　+ドロッププロパティ　+テキストプロパティ +キーボードプロパティ +背景色プロパティ +フォントプロパティ
　・種類{="プロパティエディタ"}
　・{イベント}クリックした時
　・{イベント}ダブルクリックした時
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_PROPEDIT)

#-------------------------------------------------------------------------------
■タイマー +値プロパティ
　・種類{="タイマー"}
　・オブジェクト
  # 有効の設定
　・{非公開}有効設定(V)〜VCL_SET(オブジェクト, VCL_PROP_ENABLED, V)
　・{非公開}有効取得〜　 VCL_GET(オブジェクト, VCL_PROP_ENABLED)
　・有効　←有効設定　→有効取得
　・{イベント}時満ちた時 # 時間が来たらこのイベントが呼ばれる
  ・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_TIMER)
  # 有効が分かりにくいので開始・停止を追加
  ・開始〜＃タイマーを開始する
  　　VCL_SET(オブジェクト, VCL_PROP_ENABLED, 1)
  ・停止〜＃タイマーを停止する
  　　VCL_SET(オブジェクト, VCL_PROP_ENABLED, 0)
　# 値の1msec指定が分かりにくいので秒で指定できる間隔を追加
　・{非公開}間隔取得〜それは値÷1000
　・{非公開}間隔設定(V)〜値はV×1000
　・間隔←間隔設定　→間隔取得

#-------------------------------------------------------------------------------
# デスクトップマスコット　基本
■デスクトップマスコット +フォーム
　・種類{="デスクトップマスコット"}
　・{非公開}オブジェクト
  ・キャラ画像{=「nadesiko.png」}
  ・{非公開}Ｆ実体化{=0}
  ・実体化処理〜
      最前面表示はオン
  　　もし、Ｆ実体化がオンならば抜ける。＃既に実体化している
      Ｆ実体化＝オン
      オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_FORM)
      画像はキャラ画像
      画像通り変形
      自身を中央移動
      表示。
      システム：文字サイズは24
　・作る〜
  　　実体化処理
  ・表示〜
  　　もし、Ｆ実体化＝オフならば、実体化処理。
      VCL_COMMAND(オブジェクト, "表示","")
  ・言う({=?}Sと|Sを|Sの|Sで)〜
      もし、Ｆ実体化＝オフならば、実体化処理。
      ＃吹き出しを表示する処理
      X,(Y+H/3*2)へＳを吹き出し表示
  ・歩進む(DIRへV|DIRに)〜 #　「左」へ３歩進む
  　　もし、Ｆ実体化＝オフならば、実体化処理。
  　　Ｍとは整数＝16
      （Ｖ）回
 　　     DIRで条件分岐
     　　 　「上」ならば, Y=Y-Ｍ
      　　　「下」ならば, Y=Y+Ｍ
      　　　「右」ならば, X=X+Ｍ
      　　　「左」ならば, X=X-Ｍ
      　　ここまで
　　      0.1秒待つ
      ここまで
  ・隠す〜
  　　自身→閉じる。

# デスクトップマスコットを派生させて作る
■クジラ +デスクトップマスコット
  ・キャラ画像{=「kujira.png」}

■ワニ +デスクトップマスコット
  ・キャラ画像{=「wani.gif」}

■ナコボット +デスクトップマスコット
  ・キャラ画像{=「nako.gif」}

■なこ +デスクトップマスコット
  ・キャラ画像{=「nako.png」}

# 以下は暫定...
■ライオン +デスクトップマスコット
  ・キャラ画像{=「lion.gif」}

■ペンギン +デスクトップマスコット
  ・キャラ画像{=「penguin.gif」}
  
#-----------------------------------------------------------------------
■Ｕボタン　+ボタン
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_UBUTTON)
■Ｕエディタ +エディタ
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_UEDIT)
■Ｕメモ +メモ
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_UMEMO)
■Ｕリスト +リスト
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_ULIST)
■Ｕコンボ +コンボ
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_UCOMBO)
■Ｕチェック +チェック
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_UCHECK)
■Ｕラジオ　+ラジオグループ
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_URADIO)
■Ｕグリッド +グリッド
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_UGRID)
■Ｕラベル　+ラベル
　・作る〜
　　　オブジェクトは、VCL_CREATE(自身, 名前, VCL_GUI_ULABEL)

#-----------------------------------------------------------------------
#</GUI>

#-----------------------------------------------------------------------
# 文字遅延描画のエラー回避用 (mokaさんのサンプルを改変/感謝)
# 文字遅延表示、文字遅延描画で使われる
#-----------------------------------------------------------------------
!文字遅延表示用定義とは文字列 = 『
●SYS_文字遅延描画処理(エイリアスして{グループ=?}OBJのX,YへSを{数値=200}Aで)
　　X0とは整数。
　　#描画対象OBJを省略した時は母艦を指定する。
　　もし、OBJ→名前=「」ならば
　　　　OBJに母艦をグループ参照コピー
　　　　#本来の引数の順番では誤解釈でエラーになる。
　　　　#OBJではなくOとでもすれば誤解釈されない。
　　X0=X
　　(Sの文字数)回
　　　　#文字がCRならばスキップ。LFならば改行とみなす。
　　　　もし、MID(S,回数,1)=CHR(13)ならば、続ける
　　　　もし、MID(S,回数,1)=CHR(10)ならば
　　　　　　X=X0
　　　　　　Y=Y+INT((「A」の文字高さ取得)*1.2)
　　　　　　#「*1.2」はなでしこソースにあったから。
　　　　　　続ける
　　　　もし、エイリアスが1ならば
　　　　　　OBJのX,YへMID(S,回数,1)を文字表示
　　　　違えば
　　　　　　OBJのX,YへMID(S,回数,1)を文字描画
　　　　OBJの描画処理反映
　　　　A/1000秒待つ
　　　　#次の文字位置を決める。
　　　　もし、MID(S,回数,1)のバイト数が1ならば
　　　　　　#半角1文字分右へ。
　　　　　　X=X+(「A」の文字幅取得)
　　　　違えば、
　　　　　　X=X+(「あ」の文字幅取得)
』
#=======================================================================
/* vnako.exe の初期化で以下が自動的に宣言される
母艦とはフォーム。
母艦のオブジェクトは母艦オブジェクト。
*/
＃イベント部品
イベント部品とはＧＵＩ部品。＃イベントが発生した時に設定される
!変数宣言が不要
!変数宣言はユーザー
#=======================================================================
#</vnako>
