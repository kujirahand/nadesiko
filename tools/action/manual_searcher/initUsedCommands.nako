※【なでしこ実行モード】cnako
CNAKOモードは『CON』

！`constants.nako`を取り込む
！`lib\sqlite.nako`を取り込む
！`lib\removeJoshi.nako`を取り込む

！対象ファイル名とは文字列=使用命令データのファイル名抽出

もし命令DBファイルのファイルサイズが0ならば
　命令DB初期化を起動待機

"
# initUsedCommands.nako ----------------
# データベース(sampletags.db)構築用補助データ作成開始
# > {対象ファイル名}
"と表示

タイプとは整数

雛型とはハッシュ

`SJIS`にSQLITE出力コード設定。

TAGDBとはSQLITE
これについて
　ファイルはタグDBファイル
　テーブルは`sample`
　もしタグDBファイルのファイルサイズが0KBならば
　　ヘッダをカンマで配列結合
　　それでテーブル作成

コマンドとはSQLITE
これについて
　ファイルは命令DBファイル
　テーブルは`command`
　フィールドは`simplename`

使用命令データに出力先設定
出力先初期化

作業フォルダはサンプルフォルダ

作業フォルダはランタイムパス
『sample\*.nako』を全ファイル列挙して反復
　対象を表示
　「『{対象}』を,」を一行出力
　対象のファイル名抽出を空に拡張子変更
　「『{_}』として」を出力
　対象の使用命令列挙を`,`で配列結合
　「『{_}』でタグ登録」を一行出力
　改行を出力

空に出力先設定

"
# > {対象ファイル名} ({使用命令データのファイルサイズ}KB)
# ... データ作成完了
"と表示

終わる

●使用命令列挙({文字列}NAKOの)
　返り値とは配列。ARRとは配列
　LENとは整数
　NAKOを読む
　それをトークン分割して反復
　　対象から助詞除去
　　対象が数列か判定
　　もしそうならば続ける
　　返り値で対象を配列検索
　　もしそれ≧0ならば続ける
　　LEN=対象の文字数
　　もし(LEN≦1)||(LEN≧20)ならば続ける
　　対象で『"』を文字検索
　　もしそれ＞0ならば続ける
　　ARR=コマンドで対象を曖昧検索してCSV取得
　　もしARR[0][1]が空でなければ
　　　対象を返り値に配列追加
　返り値を戻す

●タグ登録({文字列}パスを{文字列}名前として{文字列}タグで)
　雛型@(ヘッダ[MYID])=1+雛型@(ヘッダ[MYID])
　TAGDBのヘッダ[MYID]から雛型@(ヘッダ[MYID])を検索
　もしそれが空でなければ戻る
　雛型@(ヘッダ[NAME])=名前
　雛型@(ヘッダ[PATH])=パス
　雛型@(ヘッダ[TAG ])=タグを『,』で区切る
　雛型をTAGDBへレコード挿入

