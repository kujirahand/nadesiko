# 簡易説明（なでしこエディタ用）
/*
[マニュアル探査艦]
　なでしこに関することを検索できます。ローカルのサンプル・マニュアルからの検索や、ＷＥＢの公式掲示板からの検索も可能です。
　作者: U D 
　バージョン: Ver.0.99
*/

/*
TODOメモ

x 複数語検索（A and B, A or B）
  * 検索ユニットの改造
x マルチ検索（ローカル一括検索、リファレンス検索、・・・、WEB一括検索）
x 設定 > ツリーを自動で展開する
x KONA: 文字化け。文字コード関連？
x スプリットで変更する幅も設定に保存する
x OFFLINE||SAMPLE||DATABASE を最適化:
  ！OFFLINE_SAMPLE_DATABASE = OFFLINE||SAMPLE||DATABASE
  * そもそも論理和取らせる意味がほとんどなかった？
  * せめて属性の必要不要を分類したい
z 設定初期化機能
  * ↑の「警告」を出させる設定など、.iniの総初期化
  z DBの再構築
    -> できるようにはしたが、全て再構築は非常に長ったらしい
       選択再構築ができるとなおよいかと。
  x これらの機能で Program Files 以下のファイルをいじってしまう
    (別にいらない気がしてきた。)
z KONAWIKI2HTMLのCSS
z OFFLINE||WIKI||DATABASEでパスボタン.クリック時をどうするか
z デフォルトブラウザの起動
z オフラインマニュアルもツリー表示(サンプル同様)
  -> フォルダ名が分かりにくいのでできればマッピングしたい
z ウェイト？
  -> 時間のかかるユーザフォルダ検索のみで有効に
o 検索履歴機能
  * 重複語の処理はどうするか？
    -> 重複語は削除
  * 初期化機能
o 全角半角・大文字小文字
  -> 区別しない設定で検索に時間がかかることを警告しては？
    -> 実質そんなに遅くならなかったのでヘルプに書く程度に
o 起動ボタンなどのイベント追加
  -> メニュー・ボタンの有効無効切替
o KONA: ヘッダ情報も取得したい (branch)
o ツリーでクリックでなくENTER時も同じイベントを発生するように
o ワイルドカード
o WIKI検索など他のWEB検索機能実装
  -> リファレンスググる実装
o バグレポート(ファイルストリーム) (@288)
o 通常に検索が終わっても、「検索中断」と表示されてしまう？
  -> 一応修正。だが周辺コードがごちゃごちゃ

*/

！『initialize.nako』を取り込む

# 母艦の閉じた時は〜全設定保存

# ◆ グローバル変数

NODE2IDXとはハッシュ
検索結果とは配列

撫子範囲とは文字列
サンプル範囲とは文字列=サンプルフォルダ&`*.nako`
HTML範囲とは文字列=マニュアルフォルダ&`*.html;*.htm`

もし設定ファイルが存在するんでなければ
　旧設定移動

もしタグDBファイルのファイルサイズが0KBならば
　データベース初期化

INIのファイル=設定ファイル

wikiDBのINPUT=KONA_INPUT

TAGDBとはSQLITE
そのテーブルは`sample`
そのファイルはタグDBファイル

検索履歴のファイルは履歴ファイル

ウェイト処理とは変数。# イベント

#-----------------------------------
#メインエリア
#-----------------------------------

『,File,ファイル(&F)
-,F_Input,検索語の入力(&I),Ctrl+L,,検索欄に注目
-,F_Search,検索する(&S),,,検索ボタンのクリック時
-,-,-
-,F_Execute,プログラムを起動/ブラウザで閲覧(&E),F5,,起動ボタンのクリック時
-,F_Edit,編集する(&E),Ctrl+E,,編集ボタンのクリック時
-,F_Path,パスを確認する(&P),Ctrl+P,,パスボタンのクリック時
-,-,-
-,F_Close,閉じる(&C),,,終了
,Option,設定(&O)
-,O_SearchField,ユーザフォルダ(&U),,,撫子範囲変更
-,O_SearchCondition,検索条件(&C)
--,O_SC_Token,トークン検索を行う(&T),,,チェック切替
--,O_SC_Wildcard,ワイルドカードを有効にする(&W),,,チェック切替
--,O_SC_CapSmall,大文字と小文字を区別しない(&C),,,チェック切替
--,O_SC_FullHalf,全角と半角を区別しない(&F),,,チェック切替
-,O_Initialize,初期化(&I)
--,O_I_SearchHistory,検索履歴を消去(&E),,,検索履歴消去確認
--,O_I_TansakanIni,設定ファイルを初期化(&I),,,全設定初期化確認
--,O_I_DataBase,データベースを初期化(&D),,,データベース初期化確認
--,-,-
--,O_I_InitializeAll,全て初期化(&A),,,全部初期化
,Help,ヘルプ(&H)
-,H_Help,ヘルプ(&H),,,ヘルプ
-,H_Version,バージョン情報(&V),,,バージョン情報
』をメニュー一括作成

# ◆ 進行状況

進行状況とはフォーム
進行状況のW=250
進行状況のH=80
進行状況のタイトル=『進行状況』
進行状況のスタイル=『ダイアログスタイル』

進行度とはプログレスバー
進行度の親部品は進行状況
進行度のレイアウトは『全体』

進行中断とはボタン
進行中断の親部品は進行状況
進行中断のレイアウトは『下』
進行中断のテキストは『中断』
進行中断がクリックされた時は〜検索中断処理

# ◆ メインフォーム

左台とはパネル
左台のレイアウトは『左』
左台の幅は240

右台とはパネル
右台のレイアウトは『全体』

左右分割とはスプリッタ

情報とはステータスバー
情報がクリックされた時は〜
　STRとは文字列=情報のテキスト
　もしSTRが空でなければ
　　STRのスペースを改行に置き換えて言う

# ◆ 検索結果

結果ツリーとはツリー
結果ツリーの親部品は左台
結果ツリーのレイアウトは『全体』
結果ツリーでキー押された時は〜
　もし結果ツリーで押された仮想キーがENTERならば
　　結果ツリーのダブルクリック時。
結果ツリーがクリックされた時は〜
　Iとは整数。
　IDとは文字列=結果ツリーの選択ID
　もしNODE2IDX@IDが空でなければ
　　I=NODE2IDX@ID
　　検索結果[I]→情報ビュー
結果ツリーがダブルクリックされた時は〜
　Iとは整数。
　IDとは文字列=結果ツリーの選択ID
　もしNODE2IDX@IDが空でなければ
　　I=NODE2IDX@ID
　　もし検索結果[I]→種類&&URLならば
　　　検索結果[I]→パスのブラウザ開く処理
　　違えば、もし検索結果[I]→種類&&FILEならば
　　　検索結果[I]→パスの撫子開く処理
　　違えば、もし検索結果[I]→種類&&DATABASEならば
　　　検索結果[I]→名前のオフラインWIKI開く処理

上台とはスクロールパネル
上台の親部品は右台
上台のレイアウトは『上』
上台の高さは70。

# ◆ タブ

切替とはタブページ
切替の親部品は右台
切替のレイアウトは『全体』
切替の変更した時は〜
　切替の表示タブへ切替処理

切替に『ブラウザ』をタブ追加
切替の表示タブはBrowser
閲覧とはブラウザ
閲覧の親部品は切替
閲覧のレイアウトは『全体』

切替に『マニュアル』をタブ追加
切替の表示タブはManual
マニュアルビューワとはフォルダツリー
マニュアルビューワの親部品は切替
マニュアルビューワのレイアウトは『全体』
マニュアルビューワのファイルノードは`*.html;*.htm`
マニュアルビューワのフォルダはマニュアルフォルダ
マニュアルビューワでキー押された時は〜
　もしマニュアルビューワで押された仮想キーがENTERならば
　　マニュアルビューワのダブルクリック時。
マニュアルビューワがクリックされた時は〜
　マニュアルビューワで選択フォルダパス取得
　それからサンプルID取得
　それのサンプル情報ビュー
マニュアルビューワがダブルクリックされた時は〜
　マニュアルビューワで選択フォルダパス取得
　それのブラウザ開く処理

切替に『エディタ』をタブ追加
切替の表示タブはEditor
撫子とはTエディタ
撫子の親部品は切替
撫子のレイアウトは『全体』

切替に『サンプル』をタブ追加
切替の表示タブはSample
サンプルビューワとはフォルダツリー
サンプルビューワの親部品は切替
サンプルビューワのレイアウトは『全体』
サンプルビューワのファイルノードは`*.nako`
サンプルビューワのフォルダはサンプルフォルダ
サンプルビューワでキー押された時は〜
　もしサンプルビューワで押された仮想キーがENTERならば
　　サンプルビューワのダブルクリック時
サンプルビューワがクリックされた時は〜
　サンプルビューワで選択フォルダパス取得
　それからサンプルID取得
　それのサンプル情報ビュー
サンプルビューワがダブルクリックされた時は〜
　サンプルビューワで選択フォルダパス取得
　それの撫子開く処理

# ◆ 操作パネル

検索欄とはコンボ
検索欄の親部品は上台
検索欄の位置は『5,5』
検索欄の幅は270
検索欄でキー押された時は〜
　もし検索欄で押された仮想キーがENTERならば
　　検索欄を一括検索する
検索欄のIMEは「IMEオン」
検索欄に注目

検索対象とはコンボ
検索対象の親部品は上台
検索対象の位置は検索欄の下側
検索対象の幅は180
検索対象の値は0
検索対象の編集はオフ
検索対象のアイテムは『ローカルファイル
質問掲示板
初心者掲示板
プログラム掲示板
リファレンスググる』

検索ボタンとはボタン
検索ボタンの親部品は上台
検索ボタンの位置は検索対象の右側
検索ボタンがクリックされた時は〜
　検索欄を一括検索する

ボタン台とはパネル
ボタン台の親部品は上台
ボタン台の位置は検索欄の右側
ボタン台のWは100
ボタン台のHは50
ボタン台のスタイルは『凹』

起動ボタンとはボタン
起動ボタンの親部品はボタン台
起動ボタンのサイズは『5,4,45,24』
起動ボタンがクリックされた時は〜
　もしモードがFILEの状態ならば
　　撫子のポケットを起動する
　違えば、もしモードがURLの状態ならば
　　閲覧のURLを起動する

編集ボタンとはボタン
編集ボタンの親部品はボタン台
編集ボタンのサイズは『5,26,45,46』
編集ボタンがクリックされた時は〜
　もしモードがFILEの状態ならば
　　NAKOPAD&スペース&「"{撫子のポケット}"」を起動

パスボタンとはボタン
パスボタンの親部品はボタン台
パスボタンのサイズは『50,26,95,46』
パスボタンがクリックされた時は〜
　もしモードがFILEの状態ならば
　　撫子のポケットを言う
　違えば、もしモードがURLの状態ならば
　　閲覧のURLを言う

切替の表示タブはSample

もし設定ファイルのファイルサイズが0KBならば
　全設定初期化
違えば
　全設定読み込み

有効管理ユニットでオフに一括変更

母艦を閉じた時は〜
　全設定保存
母艦を表示

●切替処理(Nへ)
　もし(N==Browser)&&(閲覧のURL!=空)ならば
　　モードをFILEからURLへ変更
　　有効管理ユニットの起動機能はオン
　　有効管理ユニットの編集機能はオフ
　　有効管理ユニットのパス機能はオン
　違えば、もし(N==Editor)&&(撫子のポケットが存在する)ならば
　　モードをURLからFILEへ変更
　　有効管理ユニットの起動機能はオン
　　有効管理ユニットの編集機能はオン
　　有効管理ユニットのパス機能はオン
　違えば
　　モードからFILE||URLを削除
　　有効管理ユニットの起動機能はオフ
　　有効管理ユニットの編集機能はオフ
　　有効管理ユニットのパス機能はオフ

# ◆ 設定

●全設定保存
　検索履歴を保存
　INIについて
　　## [検索設定]
　　セクションは『検索設定』
　　撫子範囲を『撫子範囲』に書く
　　# HTML範囲=『HTML範囲』を読む
　　トークン検索を『トークン検索』に書く。
　　ワイルドカード使用を『ワイルドカード使用』に書く。
　　大文字小文字区別を『大文字小文字区別』に書く。
　　全角半角区別を『全角半角区別』に書く。
　　## [探査艦]
　　セクションは『探査艦』
　　母艦のサイズを『サイズ』に書く。
　　母艦のウィンドウ状態を『ウィンドウ状態』に書く
　　バージョンを『バージョン』に書く

●全設定読み込み
　検索履歴を初期化
　INIについて
　　セクションは『検索設定』
　　撫子範囲=『撫子範囲』を読む
　　# HTML範囲=『HTML範囲』を読む
　　『トークン検索』を読む。O_SC_Token→チェック=それ
　　『ワイルドカード使用』を読む。O_SC_Wildcard→チェック=それ
　　『大文字小文字区別』を読む。O_SC_CapSmall→チェック=それ
　　『全角半角区別』を読む。O_SC_FullHalf→チェック=それ
　　セクションは『探査艦』
　　『サイズ』を読む。
　　「,」で区切る。BX=それ\0; BY=それ\1; BW=それ\2; BH=それ\3
　　もし、BX>デスクトップWならば,BX=0
　　もし、BY>デスクトップHならば,BY=0
　　もし、BW>デスクトップWならば,BW=400
　　もし、BH>デスクトップHならば,BH=300
　　「{BX},{BY},{BW},{BH}」へ母艦サイズ変更処理
　　『ウィンドウ状態』を読む。母艦のウィンドウ状態=それ
　　『バージョン』を読む。
　　TOFLOAT(それ)でバージョンチェック。
# 1.525バグ対策
●母艦サイズ変更処理({文字列}SIZEへ)
　XYWHとは配列=SIZEをカンマで区切る
　母艦のX=TOINT(XYWH[0])
　母艦のY=TOINT(XYWH[1])
　＃母艦のW=TOINT(XYWH[2])
　＃母艦のH=TOINT(XYWH[3])

# Ver.0.97 → Ver.0.98 に伴う関連ファイルの移動
●旧設定移動
　ツール設定の終端パス削除
　それにフォルダ作成
　旧ファイルとは文字列
　「{設定ファイル}
{履歴ファイル}
{タグDBファイル}
{命令DBファイル}
{使用命令データ}」を改行で区切って反復
　　対象のツール設定を母艦パスに置き換え
　　旧ファイル=それ
　　もし旧ファイルが存在するならば
　　　旧ファイルから対象へファイルコピー

●全設定初期化
　もし設定ファイルが存在するならば
　　設定ファイルをファイル削除
　INIについて
　　ファイルは設定ファイル
　　セクションは『検索設定』
　　撫子範囲=空
　　O_SC_Token→チェック=オン
　　O_SC_Wildcard→チェック=オン
　　O_SC_CapSmall→チェック=オフ
　　O_SC_FullHalf→チェック=オフ
　全設定保存

●全設定初期化確認
　『設定ファイル"探査艦設定.ini"を一度削除して、
デフォルト設定に戻します。よろしいですか？』と二択
　もし返事がはいならば
　　全設定初期化

●検索履歴消去確認
　もし検索欄のアイテムが空でなければ
　　『検索履歴を消去しますか？』と二択
　　もし返事がはいならば
　　　検索履歴を消去

●データベース初期化確認
　『検索用データベースを再構築するため、以下のファイルを再作成します:
 * sampletags.db (サンプルタグ検索用DB)
 * usedCommands.dat (補助ファイル)
 * simpleCommands.db (補助データベース)

また、この再構築には時間がかかります。
よろしいですか？』と二択
　もし返事がはいならば
　　TAGDBのファイルは空
　　もしタグDBファイルが存在するならば
　　　タグDBファイルをファイル削除
　　もし使用命令データが存在するならば
　　　使用命令データをファイル削除
　　もし命令DBファイルが存在するならば
　　　命令DBファイルをファイル削除
　　データベース初期化
　　TAGDBのファイルはタグDBファイル

●データベース初期化
　タグDB初期化を起動待機

●全部初期化
　全設定初期化確認
　検索履歴消去確認
　データベース初期化確認

●撫子範囲変更
　「ローカル検索では、サンプルの全文検索以外にも、
指定したフォルダ以下にあるなでしこファイルから
全文検索することができます。

現在の設定:
　"{撫子範囲}"」と言う
　DIRとは文字列=撫子範囲からパス抽出
　もしDIRが空ならばDIR=マイドキュメント
　DIR=DIRでフォルダ選択
　もしDIRが空でなければ
　　もしDIRがフォルダ存在するならば
　　　撫子範囲=DIR&`*.nako`
　　　「ユーザフォルダ検索の対象は以下のように変更されました:{~}　"{撫子範囲}"」と言う

# ◆開く処理

●撫子開く処理({文字列}Fを|Fの)
　もしFが存在するんでなければ戻る
　もしFから拡張子抽出が`.nako`でなければ戻る
　切替の表示タブはEditor
　撫子のポケットはF
　撫子はFを読む
　モードをURLからFILEへ変更
　有効管理ユニットの起動機能はオン
　有効管理ユニットの編集機能はオン
　有効管理ユニットのパス機能はオン

●オフラインWIKI開く処理({文字列}NAMEの)
　wikiDBでKONA_OUTPUTへNAMEの命令情報HTML出力
　KONA_OUTPUTのブラウザ開く処理

●ブラウザ開く処理({文字列}STRの)
　閲覧のURLはSTR
　切替の表示タブはBrowser
　モードをFILEからURLへ変更
　有効管理ユニットの編集機能はオフ
　有効管理ユニットのパス機能はオン
　もしオンライン判定がオンならば
　　有効管理ユニットの起動機能はオン
　　モードでOFFLINEをONLINEへ変更
　違えば
　　有効管理ユニットの起動機能はオフ
　　モードでONLINEをOFFLINEへ変更

# ◆ 検索.開始中断処理

●一括検索する({文字列}WORDを)
　もしWORDが空ならば戻る
　WORDを検索履歴に追加
　有効管理ユニットでオフへ一括変更
　もし大文字小文字区別しないならば
　　WORD=WORDを大文字変換
　もし全角半角区別しないならば
　　WORD=WORDを英数半角変換
　もしオンライン判定がオンならば
　　検索対象で条件分岐
　　　`質問掲示板`ならばWORDを質問検索
　　　`初心者掲示板`ならばWORDを初心者検索
　　　`プログラム掲示板`ならばWORDをプログラム検索
　　　`リファレンスググる`ならばWORDをリファレンスググる
　　　＃`ユーザーズWiki`ならばWORDをWikiマニュアル検索＃うまくいかないので廃止
　　　違えば、WORDをローカル検索
　違えば、WORDをローカル検索

●ローカル検索開始処理
　モードのONLINEをOFFLINEへ変更
　進行度のタグはオン
　進行状況を閉じた時は〜検索中断処理
　進行状況を表示
　進行状況の最前面表示はオン
　検索ユニットのヒット数は0
　結果ツリーを空で一括作成 # クリア
　NODE2IDXは空
　検索結果は空

●WEB検索開始処理
　モードのOFFLINEをONLINEへ変更

●進捗報告開始({文字列}STRを{整数}MAXまで)
　進行状況は`進行状況 -- `&STR
　進行度の値は0
　進行度の最大値はMAX
　進行状況の描画処理反映
　母艦再描画

●検索中断処理
　進行度のタグはオフ
　進行状況を閉じる
　情報は「検索を中断しました。{検索ユニットのヒット数} 件ヒットしました。」
　もしモードがOFFLINEの状態ならば
　　ローカル検索終了処理
　違えば、もしモードがONLINEの状態ならば
　　WEB検索終了処理

●ローカル検索終了処理
　進行状況を閉じた時は空。# イベント初期化
　進行状況を閉じる
　有効管理ユニットの検索機能はオン
　情報は「{検索ユニットのヒット数} 件ヒットしました。」

●WEB検索終了処理
　有効管理ユニットの検索機能はオン
　切替の表示タブはBrowser

# ◆ 検索.ローカル検索

●ローカル検索({文字列}WORDを)
　ローカル検索開始処理
　`リファレンス(命令検索)`でWORDをDB検索
　`サンプル(タグ検索)`でWORDをDB検索
　`サンプル(全文検索)`でサンプル範囲からWORDを全文検索
　`マニュアル(全文検索)`でHTML範囲からWORDを全文検索
　もし撫子範囲が空でなければ
　　もしウェイト＞0ならば
　　　ウェイト処理は〜ウェイト 秒待つ
　　`ユーザフォルダ(全文検索)`で撫子範囲からWORDを全文検索
　　もしウェイト＞0ならば
　　　ウェイト処理は空
　ローカル検索終了処理
　情報は「"{WORD}" をローカル検索した結果 {検索ユニットのヒット数} 件ヒットしました。」

●DB検索({文字列}検索IDで{文字列}WORDを)
　ARRとは配列
　※ DB検索では曖昧検索でないとなぜかほとんどヒットしない
　検索IDを1/*ワイルドカード使用*/で検索ユニットの初期化
　検索ユニットからWORDを検索を、
　検索IDとして検索結果処理する
　もしトークン検索するならば
　　ARR=WORDをトークン分割
　　もしARR[0]がWORDでなければ
　　　検索ID=検索IDの`検索`を`トークン検索`に置き換え
　　　検索ユニットからARR[0]を検索を、
　　　検索IDとして検索結果処理する

●検索結果処理する({配列}ARRを{文字列}STRとして)
　もしARRの要素数が0でなければ
　　ノードID生成してSTRのARRをDB一括ノード追加処理

●全文検索({文字列}検索IDで{文字列}範囲から{文字列}WORDを)
　ARRとは配列
　検索IDをワイルドカード使用で検索ユニットの初期化
　全ファイルとは配列=範囲の全ファイル列挙
　もし全ファイルの要素数が0ならば戻る
　ノードID生成して検索IDの全ファイルからWORDのFILE一括ノード追加処理
　もしトークン検索するならば
　　ARR=WORDをトークン分割
　　もしARR[0]がWORDでなければ
　　　検索ID=検索IDの`検索`を`トークン検索`に置き換え
　　　ノードID生成して検索IDの全ファイルからARR[0]のFILE一括ノード追加処理

●DB一括ノード追加処理({文字列}GENして{文字列}STRの{配列}ARRを)
　STRを(ARRの要素数)まで進捗報告開始
　結果ツリーに",{GEN},{STR},,"で一括追加
　ARRを反復
　　もし進行度のタグがオンならば
　　　進行度=進行度+1
　　　GENへ検索結果追加処理
　　違えば
　　　検索中断処理
　　　抜ける

●FILE一括ノード追加処理({文字列}GENして{文字列}STRの{配列}ARRから{文字列}WORDの)
　結果とは整数
　STRを(ARRの要素数)まで進捗報告開始
　結果ツリーに",{GEN},{STR},,"で一括追加
　ARRを反復
　　もし進行度のタグがオンならば
　　　進行度=進行度+1
　　　もし対象が存在するならば
　　　　結果=検索ユニットで対象からWORDを全文検索
　　　　もし結果が見つかったならば
　　　　　GENへ検索結果追加処理
　　違えば
　　　検索中断処理
　　　抜ける
　　もし進行度%500ならばウェイト処理
　結果ツリーでGENの子ノード取得
　もしそれが空ならば、結果ツリーからGENのノード削除

●検索結果追加処理({文字列}Pへ)
　Iとは整数=検索結果の要素数
　NODEとは文字列=ノードID生成
　NODE2IDX@NODE=I
　検索結果[I]を検索データとして作成
　検索ユニットで検索ヒット処理
　検索ユニットの雛型を検索結果[I]にグループコピー
　結果ツリーに"{P},{NODE},{検索ユニットの雛型の名前},,"を一括追加

●ノードID生成
　`TNODE_`&(結果ツリーのアイテム数)を戻す

# ◆検索.WEB検索処理

●質問検索({文字列}WORDを)
　WEB検索開始処理
　WORDをEUC変換をバイナリダンプして『,』を『%』に置換え
　閲覧のURL=質問URL&_&『&andor=and&logs=.%2Fcbbs.dat&PAGE=20』
　情報は「{WORD} を質問掲示板の検索機能で検索しました」
　WEB検索終了処理

●初心者検索({文字列}WORDを)
　WEB検索開始処理
　WORDをEUC変換をバイナリダンプして『,』を『%』に置換え
　閲覧のURL=初心者URL&_&『&andor=and&logs=.%2Fcbbs.dat&PAGE=20』
　情報は「{WORD} を初心者掲示板の検索機能で検索しました」
　WEB検索終了処理

●プログラム検索({文字列}WORDを)
　WEB検索開始処理
　WORDをEUC変換をバイナリダンプして『,』を『%』に置換え
　閲覧のURL=プログラムURL&_&『&andor=and&logs=.%2Fcbbs.dat&PAGE=20』
　情報は「{WORD} をプログラム掲示板の検索機能で検索しました」
　WEB検索終了処理

●リファレンスググる({文字列}WORDを)
　WEB検索開始処理
　WORDをUTF8N変換をバイナリダンプして『,』を『%』に置換え
　閲覧のURL=WikiURL&_&『&sa=%E6%A4%9C%E7%B4%A2#1500』
　情報は「{WORD} をなでしこリファレンスでググりました」
　WEB検索終了処理

# ◆その他

●サンプルID取得({文字列}パスから)
　ARRとは配列
　パスのランタイムパスを空に置き換え
　TAGDBのヘッダ[PATH]からそれを検索
　ARR=それをCSV取得
　ARR[0][MYID]を戻す

●サンプル情報ビュー({整数}IDの)
　結果とは配列。INFOとは文字列
　もしIDが空ならば戻る
　TAGDBのヘッダ[MYID]からIDを検索してCSV取得
　結果はそれ\0
　もし結果[TYPE]&&OFFLINEならば
　　INFOに`[Local] `を追加
　結果[TAG]の改行をカンマに置き換え
　INFOに"{結果[PATH]}  [タグ・使用命令] {_}"を追加
　情報はINFO

●ヘルプ
　選択肢とは配列=「始めに,ローカル検索,検索の設定,検索の範囲,ボタン群,閲覧タブ,戻る」をカンマで区切る
　『知りたい項目を選択してください。』に選択肢のボタン選択
　返事で条件分岐
　　選択肢\0ならば『■始めに

マニュアル探査艦には、複数の検索機能を搭載していて、
ローカル検索とWEB検索の機能があります。
選択した検索機能で検索することができます。

＊ローカル検索：調べたい内容を、サンプルフォルダ内のなでしこファイルと、
　　　　　　　　ドキュメントフォルダ内のHTMLファイルから検索します。
　・オフラインリファレンス
　・サンプル
　・オフラインマニュアル

＊ＷＥＢ検索　：なでしこ公式サイト掲示板やWikiの検索機能を利用します。
　・質問掲示板
　・初心者掲示板
　・プログラム掲示板
　・リファレンスググる(なでしこオンラインリファレンス)
』と言ってヘルプ
　　選択肢\1ならば『■ローカル検索

検索結果は次のような項目名でツリー表示されます。
　リファレンス(命令トークン検索)
ローカル検索では複数種類の検索が行われるので、このように
「検索対象(検索種類)」と分類して表示されます。

ローカル検索では、次のものが検索対象になります:
　1. リファレンス (Wikiのオフライン版DB)
　2. サンプル (sampleフォルダ・タグDB)
　3. マニュアル (docフォルダ)
　4. ユーザフォルダ (ユーザが設定したフォルダ)
上記の順番に検索されます。

検索の種類には以下があります:
　・命令検索…リファレンスのオフラインDBで命令を検索します。
　・タグ検索…サンプルのタグDBで検索します。
　　　　　　 （サンプルで使用されている命令などの情報から検索）
　・全文検索…検索語句を含むファイルを検索します。
　・〜〜トークン検索
　　　　　　…検索語句の別名で上記のいずれかの検索を行います。
　　　　　　　詳しくは次項を参照してください。
』と言ってヘルプ
　　選択肢\2ならば『■検索の設定

＊トークン検索を行う
　― チェックを入れると、別名検索を行い検索結果を多くします。
　　 例えば「置き換え」という命令は、サンプルや解説によっては
　　 「置換」と記述している可能性があり、「置き換え」で検索しても
　　 ヒットしない可能性があります。トークン検索を有効にしておくと、
　　 「置き換え」だけでなく「置換」でも検索を行うようになります。
　※この機能では"トークン分割"命令を利用しています

＊ワイルドカード検索を有効にする
　― チェックを入れると、検索にワイルドカードを使用できます。
　　 DBからの検索とファイルからの検索で使用できるワイルドカードが異なります。
　　 （そのため、ワイルドカードが有効な設定で%を含む文字列を検索しようとすると、
　　 　DB検索において時間がかなりかかる可能性があります。）

＊大文字・小文字を区別しない
＊半角・全角を区別しない
　― チェックを入れると、区別せずに検索します。
　　 ただし、全文ファイル検索のみに有効な設定で、
　　 検索にかかる時間が長くなる可能性があります。
』と言ってヘルプ
　　選択肢\3ならば「■検索の範囲

マニュアル・サンプル以外にも、指定のフォルダから
なでしこファイルの全文検索を行うことができます。
"設定(O) > ユーザフォルダ(U)"で対象にしたいフォルダを指定すれば、
ローカル検索実行時に"ユーザフォルダ(全文検索)"として実行されます。

現在の検索範囲は以下のようになっています:

＊マニュアル
　"{HTML範囲}"
＊サンプル
　"{サンプル範囲}"
＊ユーザフォルダ
　"{撫子範囲}"
」と言ってヘルプ
　　選択肢\4ならば『■ボタン群

＊起動
　・Editorモード  ― なでしこファイルを実行
　・Browserモード ― 閲覧ページをデフォルトブラウザで起動
　※デフォルトブラウザ起動は一部の環境で使用できません

＊編集
　・Editorモード  ― なでしこエディタで編集
　・Browserモード ― （編集不可）

＊パス
　・Editorモード  ― ファイルの場所を言う
　・Browserモード ― ＵＲＬを言う
』と言ってヘルプ
　　選択肢\5ならば「■閲覧タブ

"マニュアル"タブ、"サンプル"タブには、
なでしこインストールフォルダ以下のマニュアルと
サンプルのファイルがツリー表示されています。
これらは検索機能の対象となるファイルでもあります。

＊マニュアル
　・ダブルクリックすると"ブラウザ"タブで閲覧可能

＊サンプル
　・ダブルクリックすると"エディタ"タブで閲覧可能
　・クリックすると使用されている命令などをステータスバーに表示
　　※使用されている命令が多すぎて見れない場合などは、
　　　ステータスバーをクリックすることで見ることができます。

なお、個人設定のなでしこフォルダはサンプルツリーに表示されません。
」と言ってヘルプ
　　違えば、戻る

●バージョン情報
　「作者　　　 :  U D 
ソフト名　 : {ソフト名}
バージョン : Ver.{バージョン}
Webサイト　: http://www.undefin.net/

Enjoy!」と言う

●バージョンチェック({実数}VERで)
　もしVER＜バージョンならば
　　「マニュアル探査艦がVer.{バージョン}に更新されました。」と言う
　もしVER≦0.7ならば
　　O_SC_Token→チェック=オン
　　「Ver.0.7以下 -> Ver.{バージョン}

新しく追加された主な機能:
  * トークン検索 … 別名での検索を実行し、検索結果を多くします。
  * サンプルDB検索 … 命令名から、関連するサンプルを高速で検索します。
  * リファレンスググる … なでしこオンラインリファレンスで検索します。

その他の主な変更点:
  * 検索ロジックの変更 … より高速な検索が可能になりました。
  * 検索結果のツリー表示 … 多彩な検索結果が分類され分かりやすくなりました。
  * オフラインリファレンス … 検索結果がHTMLに変換され見やすくなりました。
  * マニュアル・サンプル閲覧 … オフラインマニュアル及びサンプルを閲覧できます。
」と言う
　もしVER≦0.97ならば
　　「Ver.0.97 -> Ver.{バージョン}

バグフィックス等が中心:
  * 設定ファイル類を Program Files ではなくアプリ設定フォルダへ保存するように。
  * 一時ファイル等をテンポラリフォルダへ保存するように。
  * なでしこver.1.525βの不具合に対する暫定的な対処。
」と言う
　もしVER≦0.98ならば
　　「Ver.0.98 -> Ver.{バージョン}

DB 関連を微修正:
  * Konawiki の DB が SQLITE3 になったので対応。
  * Konawiki 記法の解析を微修正。
」と言う

# ◆ 可読化・汎用関数

●トークン検索する
　O_SC_Token→チェック
●ワイルドカード使用する
　O_SC_Wildcard→チェック
●大文字小文字区別しない
　O_SC_CapSmall→チェック
●全角半角区別しない
　O_SC_FullHalf→チェック

●増やす({参照渡し 数値}Aを)
　A=A+1

●チェック切替
　イベント部品→チェック=1-イベント部品→チェック

●返事

# ◆ 検索ユニット

■検索データ
　・名前
　・パス
　・種類
　・ID
　・情報ビュー〜
　　STRとは文字列=名前
　　もし(種類&&SAMPLE)||(種類&&WIKI)ならば
　　　STR=`#`&ID&` `&STR
　　もし種類&&(OFFLINE||FILE)ならばSTRに` [Local]`を追加
　　もし種類&&FILEならば
　　　パスのランタイムパスを空に置き換え
　　　STRにスペース&それを追加
　　情報はSTR

#-----------------------------------------------------------------------
# ■検索用ユニット
# 本体(manual_searcher.nako)に依存、単独使用は不可
# 検索機能を集約
#-----------------------------------------------------------------------
■検索ユニット
　・{検索データ}雛型
　・{整数}ヒット数
　・{文字列}検索対象
　・{文字列}検索語
　・{文字列}検索タイプ
　・{配列}レコード
　・大文字小文字統一
　・全角半角統一
　・検索イベント
　・テンプレ作成
　・初期化({文字列}IDを{整数}WILDで)〜
　　検索タイプはID&WILD
　　もしIDが`サンプル(タグ検索)`ならば
　　　もしWILDが必要ならば
　　　　検索イベントは〜
　　　　　検索ユニットの検索語をTAGDBのヘッダ[TAG]から曖昧検索
　　　違えば
　　　　検索イベントは〜
　　　　　検索ユニットの検索語をTAGDBのヘッダ[TAG]から検索
　　　テンプレ作成は〜
　　　　検索ユニットの雛型の名前=対象[NAME]
　　　　検索ユニットの雛型の種類=OFFLINE||SAMPLE||DATABASE||FILE
　　　　検索ユニットの雛型のパス=ランタイムパス&対象[PATH]
　　　　検索ユニットの雛型のID　=対象[MYID]
　　違えば、もしIDが`リファレンス(命令検索)`ならば
　　　もしWILDが必要ならば
　　　　検索イベントは〜
　　　　　検索ユニットの検索語をwikiDBから命令曖昧検索
　　　違えば
　　　　検索イベントは〜
　　　　　検索ユニットの検索語をwikiDBから命令検索
　　　テンプレ作成は〜
　　　　検索ユニットの雛型の名前=対象[1]
　　　　検索ユニットの雛型の種類=OFFLINE||WIKI||DATABASE
　　　　検索ユニットの雛型のパス=空
　　　　検索ユニットの雛型のID　=対象[0]
　　違えば、もしIDで`全文検索`を文字検索>0ならば
　　　もし大文字小文字区別しないならば
　　　　大文字小文字統一は〜大文字変換
　　　違えば
　　　　大文字小文字統一は空
　　　もし全角半角区別しないならば
　　　　全角半角統一は〜英数半角変換
　　　違えば
　　　　全角半角統一は空
　　　もしWILDが必要ならば
　　　　検索イベントは〜
　　　　　SRCとは文字列
　　　　　検索ユニットの検索対象をSRCに読む
　　　　　大文字小文字統一。全角半角統一
　　　　　検索ユニットの検索語でSRCをワイルドカードマッチ
　　　　　_=それが空でない
　　　違えば
　　　　検索イベントは〜
　　　　　SRCとは文字列
　　　　　検索ユニットの検索対象をSRCに読む
　　　　　大文字小文字統一。全角半角統一
　　　　　検索ユニットの検索語をSRCで文字検索
　　　　　_=それが0超か
　　　もしIDが`マニュアル(全文検索)`ならば
　　　　テンプレ作成は〜
　　　　　対象を読んで`title`のタグ切り出してタグ削除
　　　　　検索ユニットの雛型の名前=それをHTMLエンティティ復号
　　　　　検索ユニットの雛型の種類=OFFLINE||MANUAL||FILE||URL
　　　　　検索ユニットの雛型のパス=対象
　　　　　検索ユニットの雛型のID　=空
　　　違えば、もしIDが`サンプル(全文検索)`ならば
　　　　テンプレ作成は〜
　　　　　対象からファイル名抽出を空に拡張子変更
　　　　　検索ユニットの雛型の名前=それ
　　　　　検索ユニットの雛型の種類=OFFLINE||SAMPLE||FILE
　　　　　検索ユニットの雛型のパス=対象
　　　　　検索ユニットの雛型のID　=空
　　　違えば、もしIDが`ユーザフォルダ(全文検索)`ならば
　　　　テンプレ作成は〜
　　　　　対象からファイル名抽出を空に拡張子変更
　　　　　検索ユニットの雛型の名前=それ
　　　　　検索ユニットの雛型の種類=OFFLINE||FILE
　　　　　検索ユニットの雛型のパス=対象
　　　　　検索ユニットの雛型のID　=空
　・検索({文字列}WORDを)〜
　　検索語はWORD。
　　検索イベント。
　・全文検索({文字列}WORDを{文字列}FILEから)〜
　　_=WORD
　　大文字小文字統一。全角半角統一
　　検索語はそれ。
　　検索対象はFILE。
　　検索イベント。
　・検索ヒット処理〜
　　STRとは文字列。
　　テンプレ作成。
　　ヒット数を増やす
　　STR=TOSTR(ヒット数) &
　　　　` 件目のHit: "` &
　　　　雛型の名前 &
　　　　`" -- ` & 検索タイプ
　　情報はSTR

#-----------------------------------------------------------------------
# ■有効管理用ユニット
# 本体(manual_searcher.nako)に依存、単独使用は不可
# 有効を切替る必要のある機能(部品)を集約
#-----------------------------------------------------------------------
■有効管理ユニット
　・起動機能←起動設定→起動取得
　・起動設定(V)〜
　　起動ボタンの有効はV
　　F_Execute→有効はV
　・起動取得〜_=起動ボタンの有効
　・編集機能←編集設定→編集取得
　・編集設定(V)〜
　　編集ボタンの有効はV
　　F_Edit→有効はV
　・編集取得〜_=編集ボタンの有効
　・パス機能←パス設定→パス取得
　・パス設定(V)〜
　　パスボタンの有効はV
　　F_Path→有効はV
　・パス取得〜_=パスボタンの有効
　・検索機能←検索設定→検索取得
　・検索設定(V)〜
　　検索欄の有効はV
　　検索ボタンの有効はV
　　F_Input→有効はV
　　F_Search→有効はV
　・検索取得〜_=検索ボタンの有効
　・一括変更({整数}Vへ|Vに)〜
　　起動機能=V
　　編集機能=V
　　パス機能=V
　　＃検索機能=V


#-----------------------------------------------------------------------
# ■モード管理用ユニット
# 論理演算の支援
#-----------------------------------------------------------------------
■モード
　・{整数}値{=0}
　・追加({整数}Vを)〜
　　値=値||V
　・削除({整数}Vを)〜
　　値=値&&(NORMAL-V)
　・変更({=?}Aを{整数}Bへ|AからBに)〜
　　もしAが空でなければ
　　　Aを削除
　　Bを追加
　・状態({整数}Vの)〜
　　_=値&&V


#-----------------------------------------------------------------------
# ■検索履歴管理用ユニット
#-----------------------------------------------------------------------
■検索履歴
　・{文字列}ファイル
　・追加({文字列}Sを)〜
　　ARRとは配列。Iとは整数
　　ARR=検索欄→アイテム
　　I=ARRでSを配列検索
　　もしIが(-1)でなければ
　　　ARRのIを配列削除
　　ARRの0にSを配列挿入
　　検索欄のアイテム=ARR
　・消去〜
　　もしファイルが存在するならば
　　　検索欄のアイテムは空
　　　保存
　・初期化〜
　　もしファイルが存在するならば
　　　ファイルを読む
　　　検索欄のアイテム=それ
　・保存〜
　　検索欄のアイテムをファイルにシステム:保存

