# ----------------------------------------------
# なでしこのコマンド一覧をＤＢに格納する
# ----------------------------------------------
# 設定
コマンド一覧＝「{ランタイムパス}tools\command.txt」
ＤＢファイル＝「{ランタイムパス}tools\command.db」
旧ユーザーメモ=「」
＃処理実行
もし、DBファイルが存在するならば
　　ＤＢファイルをファイル削除。
＃DB存在＝DBファイルが存在するか？
＃「データベースを更新しますか？」と二択。
＃もし、それがはいならば
コマンドＤＢ格納処理。
＃違えば
　　＃ハンドル＝DBファイルをSQLITE開く。
＃「ユーザーサンプルを更新しますか？」と二択。
＃もし、それがはいならば
＃　　ユーザーサンプルDB格納処理。
終わる。

●コマンドDB格納処理
    大見出し＝「」
    小見出し＝「」
    ハンドル=ＤＢファイルをSQLITE開く
    テーブル作成処理。
    ハンドルで「begin」をSQLITE実行
    コマンド一覧を開く
　　　　反復
　　　　　　Ｃ＝対象から１文字左部分
　　　　　　もし、Ｃ＝「+」ならば
　　　　　　　　大見出し＝対象の１から１文字削除
　　　　　　　　続ける
　　　　　　もし、Ｃ＝「-」ならば
　　　　　　　　小見出し＝対象の１から１文字削除
　　　　　　　　続ける
　　　　　　もし、Ｃ＝「|」ならば
　　　　　　　　対象の１から１文字削除
　　　　　　　　対象のコマンド解析
　　　　　　　　続ける
　　ハンドルで「commit」をSQLITE実行

●エスケープ処理（Sって）
　　Sの「"」を「""」に置換
　　それを戻す

●コマンド解析（Ｓの）
　　名称＝Ｓの「,」まで切り取る
　　引数＝Ｓの「"」から「",」まで範囲切り取ってエスケープ処理
　　解説＝Ｓの「"」から「",」まで範囲切り取ってエスケープ処理
　　番号＝Ｓの「,」まで切り取る
　　英名＝Ｓの「,」まで切り取り、「@」を空に置換
　　種類＝Ｓの「,」まで切り取る
　　カナ＝Ｓの「,」まで切り取る
　　もし、番号が空ならば、戻る。
　　# 登録されているか確認
　　ハンドルで「select id from command where id={番号}」をSQLITE実行。
　　空白除去。
　　
　　もし、それが空ならば
　　　　SQL＝「insert into command (id,name,args,desc,basname,」＆
　　　　「ctype,kana,h1,h2)」＆
　　　　「values({番号},"{名称}","{引数}",」＆
　　　　「"{解説}","{英名}","{種類}","{カナ}","{大見出し}","{小見出し}")」
　　　　N=ハンドルでSQLをSQLITE実行。
　　違えば
　　　　SQL＝「update command set name="{名称}",args="{引数}",」＆
　　　　「desc="{解説}",basname="{英名}",ctype="{種類}",kana="{カナ}",」＆
　　　　「h1="{大見出し}",h2="{小見出し}" 」＆
　　　　「where id={番号};」
　　　　ハンドルでSQLをSQLITE実行。

　　もし、回数％５０＝０ならば
　　　　母艦のタイトルは「{番号}:{名称}」
　　
　　
●テーブル作成処理
　　もし、DB存在がはいならば、戻る。
　　定義＝「create table command (id INTEGER PRIMARY KEY,」＆
　　　　　「name,args,desc,basname,ctype,kana,h1,h2)」
　　エラー監視
　　　　ハンドルで定義をSQLITE実行
　　エラーならば
　　　　「テーブルが作成できませんでした」と言う

●ユーザーサンプルDB格納処理
　　# 削除
　　エラー監視
　　　　ハンドルで「drop table umemo;」をSQLITE実行
　　エラーならば
　　　　エラーメッセージを言う
　　# 作成
　　定義＝「create table umemo (id INTEGER PRIMARY KEY,」＆
　　「cid, link, man, head, date, text, code, no);」
　　エラー監視
　　　　定義を言う
　　　　ハンドルで定義をSQLITE実行
　　エラーならば
　　　　「テーブルが作成できませんでした」と言う
　　NO=1
　　「{旧ユーザーメモ}*.txt」のファイル列挙。　　
　　反復
　　　　母艦＝対象
　　　　番号＝対象の「.txt」を「」に置換。
　　　　「{旧ユーザーメモ}\{番号}.txt」を開く。
　　　　Ａ＝それを改行で区切る。
　　　　Ａの０を配列削除。
　　　　Ａを反復
　　　　　　トリムして、対象に代入。
　　　　　　もし、それが空ならば、続ける
　　　　　　KEYS="id,cid,";
　　　　　　VALS="{NO},{番号},";
　　　　　　NO=NO+1
　　　　　　対象をタブで区切る
　　　　　　反復
　　　　　　　　ＫＥＹ＝対象の「=」まで切り取る
　　　　　　　　ＶＡＬ＝対象
　　　　　　　　VALの「\n」を改行に置換。
　　　　　　　　「\\」を「\」に置換
　　　　　　　　ＶＡＬ＝それ
　　　　　　　　VAL＝エスケープ処理(VAL)
　　　　　　　　KEYS=KEYS&「{KEY},」
　　　　　　　　VALS=VALS&「"{VAL}",」
　　　　　　KEYSから1文字右端削除
　　　　　　VALSから1文字右端削除
　　　　　　ＳＱＬ＝「INSERT INTO umemo ({KEYS}) VALUES ({VALS});」
　　　　　　もし、ＬＡＳＴＳＱＬ＝ＳＱＬならば
　　　　　　　　続ける。
　　　　　　エラー監視
　　　　　　　　ハンドルでＳＱＬをＳＱＬＩＴＥ実行
　　　　　　　　ＬＡＳＴＳＱＬ＝ＳＱＬ
　　　　　　エラーならば
　　　　　　　　「｛エラーメッセージ｝：｛改行｝｛ＳＱＬ｝」を言う
　　　　　　ここまで
　　　　ここまで
　　母艦＝「ＯＫ」
　　



