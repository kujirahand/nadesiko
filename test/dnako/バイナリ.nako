●テスト_DNAKO_バイナリ_バイナリ設定
　Sとは文字列
　
　### 整数
　## 1バイト
　Sに1を確保
　Sの1に128を「char」でバイナリ設定
　Sをバイナリダンプ
　それと「80」でテスト実行
　
　## 2バイト
　Sに2を確保
　Sの1に32768を「short」でバイナリ設定
　Sをバイナリダンプ
　それと「00,80」でテスト実行
　Sの1に32768を「word」でバイナリ設定
　Sをバイナリダンプ
　それと「00,80」でテスト実行
　
　# 整数変換して設定
　Sの1に「01」を「short」でバイナリ設定
　Sをバイナリダンプ
　それと「01,00」でテスト実行
　# 文字列は文字列として設定
　Sの1に「01」を「word」でバイナリ設定
　Sをバイナリダンプ
　それと「31,30」でテスト実行
　
　## 4バイト
　Sに4を確保
　Sの1に2147483648を「int」でバイナリ設定
　Sをバイナリダンプ
　それと「00,00,00,80」でテスト実行
　Sの1に2147483648を「dword」でバイナリ設定
　Sをバイナリダンプ
　それと「00,00,00,80」でテスト実行
　
　# はじめの1バイトだけを文字として設定
　Sの1に「0123」を「int」でバイナリ設定
　Sをバイナリダンプ
　それと「30,00,00,00」でテスト実行
　# 文字列は文字列として設定
　Sの1に「0123」を「dword」でバイナリ設定
　Sをバイナリダンプ
　それと「33,32,31,30」でテスト実行
　
　## 8バイト
　Sに8を確保
　Sの1に2^63を「int64」でバイナリ設定
　Sをバイナリダンプ
　それと「00,00,00,00,00,00,00,80」でテスト実行
　Sの1に2^63を「qword」でバイナリ設定
　Sをバイナリダンプ
　それと「00,00,00,00,00,00,00,80」でテスト実行
　
　# 2^64より大きな値、実数の都合上、誤差が生じる
　/*
　Sの1に2^64+10000000を「int64」でバイナリ設定
　Sをバイナリダンプ
　それと「00,90,98,00,00,00,00,00」でテスト実行
　Sの1に2^64+10000000を「qword」でバイナリ設定
　Sをバイナリダンプ
　それと「00,90,98,00,00,00,00,00」でテスト実行
　*/
　
　### 実数
　Sに4を確保
　Sの1に0.1を「float」でバイナリ設定
　Sをバイナリダンプ
　それと「CD,CC,CC,3D」でテスト実行
　Sに8を確保
　Sの1に0.1を「double」でバイナリ設定
　Sをバイナリダンプ
　それと「9A,99,99,99,99,99,B9,3F」でテスト実行
　
　### 文字列
　Sに16を確保
　Sの1に「あいうえお」を「char*」でバイナリ設定
　Sをバイナリダンプ
　それと「82,A0,82,A2,82,A4,82,A6,82,A8,00,00,00,00,00,00」でテスト実行

●テスト_DNAKO_バイナリ_バイナリ取得
　### 整数
　## 1バイト
　「{\$80}」の1を「char」でバイナリ取得
　それと「{\$80}」でテスト実行
　「{\$80}」の1を「byte」でバイナリ取得
　それと128でテスト実行
　
　## 2バイト
　「{\$00,$80}」の1を「short」でバイナリ取得
　それと-32768でテスト実行
　「{\$00,$80}」の1を「word」でバイナリ取得
　それと32768でテスト実行
　
　## 4バイト
　「{\$00,$00,$00,$80}」の1を「int」でバイナリ取得
　それと-2147483648でテスト実行
　「{\$00,$00,$00,$80}」の1を「dword」でバイナリ取得
　それと2147483648でテスト実行
　
　## 8バイト
　「{\$00,$00,$00,$00,$00,$00,$00,$80}」の1を「int64」でバイナリ取得
　それと-2^63でテスト実行
　「{\$00,$00,$00,$00,$00,$00,$00,$80}」の1を「qword」でバイナリ取得
　それと2^63でテスト実行
　
　### 実数
　# 表示上では誤差なしに見えても、バイナリ的には異なるので、適当に丸めた物を比較。
　# 実数なので、おそらく問題なしと思われる。
　「{\$CD,$CC,$CC,$3D}」の1を「float」でバイナリ取得
　＃それと0.100000001490116でテスト実行
　2で小数点四捨五入
　それと(0.1を2で小数点四捨五入)でテスト実行
　「{\$9A,$99,$99,$99,$99,$99,$B9,$3F}」の1を「double」でバイナリ取得
　＃それと0.1でテスト実行
　2で小数点四捨五入
　それと(0.1を2で小数点四捨五入)でテスト実行
　
　### 文字列
　「あいうえお」の1を「char*」でバイナリ取得
　それと「あいうえお」でテスト実行


