Åwfunction  lua_newstate(f : lua_Alloc; ud : Pointer) : Plua_State;
  cdecl; external LuaDLL;
procedure lua_close(L: Plua_State);
  cdecl; external LuaDLL;
function  lua_newthread(L : Plua_State) : Plua_State;
  cdecl; external LuaDLL;
function  lua_atpanic(L : Plua_State; panicf : lua_CFunction) : lua_CFunction;
  cdecl; external LuaDLL;
function  lua_gettop(L : Plua_State) : Integer;
  cdecl; external LuaDLL;
procedure lua_settop(L : Plua_State; idx : Integer);
  cdecl; external LuaDLL;
procedure lua_pushvalue(L : Plua_State; idx : Integer);
  cdecl; external LuaDLL;
procedure lua_remove(L : Plua_State; idx : Integer);
  cdecl; external LuaDLL;
procedure lua_insert(L : Plua_State; idx : Integer);
  cdecl; external LuaDLL;
procedure lua_replace(L : Plua_State; idx : Integer);
  cdecl; external LuaDLL;
function  lua_checkstack(L : Plua_State; sz : Integer) : LongBool;
  cdecl; external LuaDLL;
procedure lua_xmove(src, dest : Plua_State; n : Integer);
  cdecl; external LuaDLL;
function lua_isnumber(L : Plua_State; idx : Integer) : LongBool;
  cdecl; external LuaDLL;
function lua_isstring(L : Plua_State; idx : Integer) : LongBool;
  cdecl; external LuaDLL;
function lua_iscfunction(L : Plua_State; idx : Integer) : LongBool;
  cdecl; external LuaDLL;
function lua_isuserdata(L : Plua_State; idx : Integer) : LongBool;
  cdecl; external LuaDLL;
function lua_type(L : Plua_State; idx : Integer) : Integer;
  cdecl; external LuaDLL;
function lua_typename(L : Plua_State; tp : Integer) : PAnsiChar;
  cdecl; external LuaDLL;
function lua_equal(L : Plua_State; idx1, idx2 : Integer) : LongBool;
  cdecl; external LuaDLL;
function lua_rawequal(L : Plua_State; idx1, idx2 : Integer) : LongBool;
  cdecl; external LuaDLL;
function lua_lessthan(L : Plua_State; idx1, idx2 : Integer) : LongBool;
  cdecl; external LuaDLL;
function lua_tonumber(L : Plua_State; idx : Integer) : lua_Number;
  cdecl; external LuaDLL;
function lua_tointeger(L : Plua_State; idx : Integer) : lua_Integer;
  cdecl; external LuaDLL;
function lua_toboolean(L : Plua_State; idx : Integer) : LongBool;
  cdecl; external LuaDLL;
function lua_tolstring(L : Plua_State; idx : Integer; len : Psize_t) : PAnsiChar;
  cdecl; external LuaDLL;
function lua_objlen(L : Plua_State; idx : Integer) : size_t;
  cdecl; external LuaDLL;
function lua_tocfunction(L : Plua_State; idx : Integer) : lua_CFunction;
  cdecl; external LuaDLL;
function lua_touserdata(L : Plua_State; idx : Integer) : Pointer;
  cdecl; external LuaDLL;
function lua_tothread(L : Plua_State; idx : Integer) : Plua_State;
  cdecl; external LuaDLL;
function lua_topointer(L : Plua_State; idx : Integer) : Pointer;
  cdecl; external LuaDLL;
procedure lua_pushnil(L : Plua_State);
  cdecl; external LuaDLL;
procedure lua_pushnumber(L : Plua_State; n : lua_Number);
  cdecl; external LuaDLL;
procedure lua_pushinteger(L : Plua_State; n : lua_Integer);
  cdecl; external LuaDLL;
procedure lua_pushlstring(L : Plua_State; const s : PAnsiChar; ls : size_t);
  cdecl; external LuaDLL;
procedure lua_pushstring(L : Plua_State; const s : PAnsiChar);
  cdecl; external LuaDLL;
function  lua_pushvfstring(L : Plua_State; const fmt : PAnsiChar; argp : Pointer) : PAnsiChar;
  cdecl; external LuaDLL;
function  lua_pushfstring(L : Plua_State; const fmt : PAnsiChar) : PAnsiChar; varargs;
  cdecl; external LuaDLL;
procedure lua_pushcclosure(L : Plua_State; fn : lua_CFunction; n : Integer);
  cdecl; external LuaDLL;
procedure lua_pushboolean(L : Plua_State; b : LongBool);
  cdecl; external LuaDLL;
procedure lua_pushlightuserdata(L : Plua_State; p : Pointer);
  cdecl; external LuaDLL;
function  lua_pushthread(L : Plua_state) : Cardinal;
  cdecl; external LuaDLL;
procedure lua_gettable(L : Plua_State ; idx : Integer);
  cdecl; external LuaDLL;
procedure lua_getfield(L : Plua_State; idx : Integer; k : PAnsiChar);
  cdecl; external LuaDLL;
procedure lua_rawget(L : Plua_State; idx : Integer);
  cdecl; external LuaDLL;
procedure lua_rawgeti(L : Plua_State; idx, n : Integer);
  cdecl; external LuaDLL;
procedure lua_createtable(L : Plua_State; narr, nrec : Integer);
  cdecl; external LuaDLL;
function  lua_newuserdata(L : Plua_State; sz : size_t) : Pointer;
  cdecl; external LuaDLL;
function  lua_getmetatable(L : Plua_State; objindex : Integer) : LongBool;
  cdecl; external LuaDLL;
procedure lua_getfenv(L : Plua_State; idx : Integer);
  cdecl; external LuaDLL;
procedure lua_settable(L : Plua_State; idx : Integer);
  cdecl; external LuaDLL;
procedure lua_setfield(L : Plua_State; idx : Integer; const k : PAnsiChar);
  cdecl; external LuaDLL;
procedure lua_rawset(L : Plua_State; idx : Integer);
  cdecl; external LuaDLL;
procedure lua_rawseti(L : Plua_State; idx , n: Integer);
  cdecl; external LuaDLL;
function lua_setmetatable(L : Plua_State; objindex : Integer): LongBool;
  cdecl; external LuaDLL;
function lua_setfenv(L : Plua_State; idx : Integer): LongBool;
  cdecl; external LuaDLL;
procedure lua_call(L : Plua_State; nargs, nresults : Integer);
  cdecl; external LuaDLL;
function  lua_pcall(L : Plua_State; nargs, nresults, errfunc : Integer) : Integer;
  cdecl; external LuaDLL;
function  lua_cpcall(L : Plua_State; func : lua_CFunction; ud : Pointer) : Integer;
  cdecl; external LuaDLL;
function  lua_load(L : Plua_State; reader : lua_Reader; dt : Pointer; const chunkname : PAnsiChar) : Integer;
  cdecl; external LuaDLL;
function lua_dump(L : Plua_State; writer : lua_Writer; data: Pointer) : Integer;
  cdecl; external LuaDLL;
function lua_yield(L : Plua_State; nresults : Integer) : Integer;
  cdecl; external LuaDLL;
function lua_resume(L : Plua_State; narg : Integer) : Integer;
  cdecl; external LuaDLL;
function lua_status(L : Plua_State) : Integer;
  cdecl; external LuaDLL;
function lua_gc(L : Plua_State; what, data : Integer) : Integer;
  cdecl; external LuaDLL;
function lua_error(L : Plua_State) : Integer;
  cdecl; external LuaDLL;
function lua_next(L : Plua_State; idx : Integer) : Integer;
  cdecl; external LuaDLL;
procedure lua_concat(L : Plua_State; n : Integer);
  cdecl; external LuaDLL;
function  lua_getallocf(L : Plua_State; ud : PPointer) : lua_Alloc;
  cdecl; external LuaDLL;
procedure lua_setallocf(L : Plua_State; f : lua_Alloc; ud : Pointer);
  cdecl; external LuaDLL;
function luaopen_base(L : Plua_State) : Integer;
  cdecl; external LuaDLL;
function luaopen_table(L : Plua_State) : Integer;
  cdecl; external LuaDLL;
function luaopen_io(L : Plua_State) : Integer;
  cdecl; external LuaDLL;
function luaopen_os(L : Plua_State) : Integer;
  cdecl; external LuaDLL;
function luaopen_string(L : Plua_State) : Integer;
  cdecl; external LuaDLL;
function luaopen_math(L : Plua_State) : Integer;
  cdecl; external LuaDLL;
function luaopen_debug(L : Plua_State) : Integer;
  cdecl; external LuaDLL;
function luaopen_package(L : Plua_State) : Integer;
  cdecl; external LuaDLL;
procedure luaL_openlibs(L : Plua_State);
  cdecl; external LuaDLL;
function lua_getstack(L : Plua_State; Level : Integer; AR : Plua_Debug) : Integer;
  cdecl; external LuaDLL;
function lua_getinfo(L : Plua_State; const what : PAnsiChar; AR : Plua_Debug): Integer;
  cdecl; external LuaDLL;
function lua_getlocal(L : Plua_State; const AR : Plua_Debug; n : Integer) : PAnsiChar;
  cdecl; external LuaDLL;
function lua_setlocal(L : Plua_State; const AR : Plua_Debug; n : Integer) : PAnsiChar;
  cdecl; external LuaDLL;
function lua_getupvalue(L : Plua_State; funcindex, n : Integer) : PAnsiChar;
  cdecl; external LuaDLL;
function lua_setupvalue(L : Plua_State; funcindex, n : Integer) : PAnsiChar;
  cdecl; external LuaDLL;
function lua_sethook(L : Plua_State; func : lua_Hook; mask, count: Integer): Integer;
  cdecl; external LuaDLL;
function lua_gethook(L : Plua_State) : lua_Hook;
  cdecl; external LuaDLL;
function lua_gethookmask(L : Plua_State) : Integer;
  cdecl; external LuaDLL;
function lua_gethookcount(L : Plua_State) : Integer;
  cdecl; external LuaDLL;
procedure luaL_openlib(L : Plua_State; const libname : PAnsiChar; const lr : PluaL_Reg; nup : Integer);
  cdecl; external LuaDLL;
procedure luaL_register(L : Plua_State; const libname : PAnsiChar; const lr : PluaL_Reg);
  cdecl; external LuaDLL;
function luaL_getmetafield(L : Plua_State; obj : Integer; const e : PAnsiChar) : Integer;
  cdecl; external LuaDLL;
function luaL_callmeta(L : Plua_State; obj : Integer; const e : PAnsiChar) : Integer;
  cdecl; external LuaDLL;
function luaL_typerror(L : Plua_State; narg : Integer; const tname : PAnsiChar) : Integer;
  cdecl; external LuaDLL;
function luaL_argerror(L : Plua_State; numarg : Integer; const extramsg : PAnsiChar) : Integer;
  cdecl; external LuaDLL;
function luaL_checklstring(L : Plua_State; numArg : Integer; ls : Psize_t) : PAnsiChar;
  cdecl; external LuaDLL;
function luaL_optlstring(L : Plua_State; numArg : Integer; const def: PAnsiChar; ls: Psize_t) : PAnsiChar;
  cdecl; external LuaDLL;
function luaL_checknumber(L : Plua_State; numArg : Integer) : lua_Number;
  cdecl; external LuaDLL;
function luaL_optnumber(L : Plua_State; nArg : Integer; def : lua_Number) : lua_Number;
  cdecl; external LuaDLL;
function luaL_checkinteger(L : Plua_State; numArg : Integer) : lua_Integer;
  cdecl; external LuaDLL;
function luaL_optinteger(L : Plua_State; nArg : Integer; def : lua_Integer) : lua_Integer;
  cdecl; external LuaDLL;
procedure luaL_checkstack(L : Plua_State; sz : Integer; const msg : PAnsiChar);
  cdecl; external LuaDLL;
procedure luaL_checktype(L : Plua_State; narg, t : Integer);
  cdecl; external LuaDLL;
procedure luaL_checkany(L : Plua_State; narg : Integer);
  cdecl; external LuaDLL;
function luaL_newmetatable(L : Plua_State; const tname : PAnsiChar) : Integer;
  cdecl; external LuaDLL;
function luaL_checkudata(L : Plua_State; ud : Integer; const tname : PAnsiChar) : Pointer;
  cdecl; external LuaDLL;
procedure luaL_where(L : Plua_State; lvl : Integer);
  cdecl; external LuaDLL;
function  luaL_error(L : Plua_State; const fmt : PAnsiChar) : Integer; varargs;
  cdecl; external LuaDLL;
function luaL_checkoption(L : Plua_State; narg : Integer; const def : PAnsiChar; const lst : array of PAnsiChar) : Integer;
  cdecl; external LuaDLL;
function  luaL_ref(L : Plua_State; t : Integer) : Integer;
  cdecl; external LuaDLL;
procedure luaL_unref(L : Plua_State; t, ref : Integer);
  cdecl; external LuaDLL;
function luaL_loadfile(L : Plua_State; const filename : PAnsiChar) : Integer;
  cdecl; external LuaDLL;
function luaL_loadbuffer(L : Plua_State; const buff : PAnsiChar; sz : size_t; const name: PAnsiChar) : Integer;
  cdecl; external LuaDLL;
function luaL_loadstring(L : Plua_State; const s : PAnsiChar) : Integer;
  cdecl; external LuaDLL;
function luaL_newstate() : Plua_State;
  cdecl; external LuaDLL;
function luaL_gsub(L : Plua_State; const s, p, r : PAnsiChar) : PAnsiChar;
  cdecl; external LuaDLL;
function luaL_findtable(L : Plua_State; idx : Integer; const fname : PAnsiChar; szhint : Integer) : PAnsiChar;
  cdecl; external LuaDLL;
procedure luaL_buffinit(L : Plua_State; B : PluaL_Buffer);
  cdecl; external LuaDLL;
function  luaL_prepbuffer(B : PluaL_Buffer) : PAnsiChar;
  cdecl; external LuaDLL;
procedure luaL_addlstring(B : PluaL_Buffer; const s : PAnsiChar; ls : size_t);
  cdecl; external LuaDLL;
procedure luaL_addstring(B : PluaL_Buffer; const s : PAnsiChar);
  cdecl; external LuaDLL;
procedure luaL_addvalue(B : PluaL_Buffer);
  cdecl; external LuaDLL;
procedure luaL_pushresult(B : PluaL_Buffer);
  cdecl; external LuaDLL;ÅxÇîΩïú
Å@Å@Ç‡ÇµÅAMID(ëŒè€,1,2)ÅÅÅu  ÅvÇ»ÇÁÇŒë±ÇØÇÈÅB
Å@Å@É^ÉCÉvÅÅÉgÉäÉÄÅiëŒè€ÇÃÅu ÅvÇ‹Ç≈êÿÇËéÊÇÈÅj
Å@Å@ä÷êîñºÅÅÉgÉäÉÄÅiëŒè€ÇÃÅu(ÅvÇ‹Ç≈êÿÇËéÊÇÈÅj
Å@Å@à¯êîÅÅëŒè€ÇÃÅu)ÅvÇ‹Ç≈êÿÇËéÊÇÈ
Å@Å@ëŒè€ÇÃÅu:ÅvÇ‹Ç≈êÿÇËéÊÇÈ
Å@Å@RÉ^ÉCÉvÅÅÉgÉäÉÄÅiëŒè€ÇÃÅu;ÅvÇ‹Ç≈êÿÇËéÊÇÈÅjÅB
Å@Å@ÅîÅÅÅÅÅÅ
Å@Å@Ç‡ÇµÅAÉ^ÉCÉvÅÅÅufunctionÅvÇ»ÇÁÇŒ
Å@Å@Å@Å@FêÈåæÅÅFêÈåæÅïÅutype __{ä÷êîñº} = {É^ÉCÉv}({à¯êî}):{RÉ^ÉCÉv};cdecl;Åv&â¸çs
Å@Å@Å@Å@FêÈåæÅÅFêÈåæÅïÅuvar  {ä÷êîñº}:__{ä÷êîñº};Åv&â¸çs
Å@Å@à·Ç¶ÇŒ
Å@Å@Å@Å@FêÈåæÅÅFêÈåæÅïÅutype __{ä÷êîñº} = {É^ÉCÉv}({à¯êî});cdecl;{~}Åv
Å@Å@Å@Å@FêÈåæÅÅFêÈåæÅïÅuvar  {ä÷êîñº}:__{ä÷êîñº};Åv&â¸çs
Å@Å@Ç±Ç±Ç‹Ç≈
Å@Å@#=====
Å@Å@Fä÷êîÅÅFä÷êîÅïÅu  {ä÷êîñº} := GetProcAddress(h, '{ä÷êîñº}');{~}Åv
#FêÈåæÇåæÇ§
Fä÷êîÇåæÇ§
