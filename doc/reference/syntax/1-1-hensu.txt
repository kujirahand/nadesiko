★変数

♪概要
　なでしこには明確な型が存在しますが、それほど意識しなくても使えるようになってます。
少し規模の大きなプログラムを作るときには、型を明確にすることでエラーチェックが楽になります。

■変数の名前

　なでしこでは助詞により単語を区切っていきます。
そのため、助詞を含む単語は変数名は使えません。

♪リンク〜9-1-josi.htm〜助詞の一覧

♪ソース〜＊＊
＃変数に使える例
値段は、５０円。

＃変数に使えない例
かに味噌は、３５０円。＃←「に」で変数名が切れる
＊＊

■変数の宣言

　初期状態では、変数の宣言は必要ありません。
しかし、変数宣言をしないで使うと、思わぬ書き間違いをすることがあるので、変数を宣言が必要にできます。

　変数宣言をするには、以下のように『(変数)とは(型)。』のように書きます。

♪ソース〜＄＄＄
変数Ｓとは文字列。
変数Ａとは整数。
＄＄＄

　変数の型には、文字列、整数、数値、配列、ハッシュの種類があります。


■変数宣言の強要

　プログラム中に、『!変数宣言が必要』と書くとプログラムの
それ以降の部分で変数宣言が強要されます。

　変数宣言の強要を解除するには、『!変数宣言が不要』と書きます。

■変数初期化の強要

　小規模のプログラムを作っているとき、全ての変数を宣言するのは面倒ですが、
それでも、書き間違いを防ぎたい場合があります。そんなときは、『！変数初期化が必要』と
書いてください。それ以降の部分で、初期化されてない変数があればエラーを出すように
なります。

　変数初期化の強要を解除するには『!変数初期化が不要』と書きます。

■変数への代入

　変数への代入方法は３つの方法があります。

♪ソース〜＄＄＄
#1つめの方法（=を使った代入式）
変数 = 値

#2つめの方法（はを使った代入式）
変数は値

#3つめの方法（「代入」命令を使う）
値を変数に代入。
＄＄＄

■グローバル変数・ローカル変数

関数の外で宣言された変数は、グローバル変数になります。
関数の中で宣言された変数は、ローカル変数になります。

●定数

オプション指令「！」をつけて以下のように宣言した
変数は強制的にグローバルな定数になります。
定数は書き換えすることができない変数です。

「！」をつけて宣言した定数は、プログラム実行前の
プリプロセスの段階で定義されます。

♪ソース〜＃＃＃
#定数の定義
!変数Ａとは変数
!変数Ｂ = 32
＃＃＃

■セッター／ゲッターの設定

変数の設定と取得に関数を割り当てることができます。
変数の代入時に特別な処理を行わせたい場合に便利です。

以下の例では、Ａに設定と取得の処理を割り当てて、
Ａに値が設定されるたびに設定された内容を画面に表示する例です。

♪ソース〜＊＊＊
ＦＡとは整数
ＦＡ＝５０

＊Ａ取得
　それ＝ＦＡ

＊Ａ設定（Ｖ）
　「Ａに｛Ｖ｝が設定されました。」と表示
　ＦＡ＝Ｖ

＃セッターゲッターの設定
Ａとは整数　←Ａ設定　→Ａ取得

＃利用
Ａ＝３０
Ａを言う
Ａ＝１００
Ａを言う
＊＊＊

さらに便利な例としては、システム命令の、「作業フォルダ」があります。
作業フォルダにパスが代入されると「作業フォルダ設定」を呼び、
作業フォルダが参照されると「作業フォルダ取得」を呼び出しています。
あたかも、変数を操作しているような感覚で、命令を呼び出すことができます。

